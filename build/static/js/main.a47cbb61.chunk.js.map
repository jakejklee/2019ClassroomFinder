{"version":3,"sources":["firebase/firebase.tsx","components/ClassModal.tsx","screens/Login.tsx","screens/ManagerMain.tsx","screens/Signup.tsx","screens/StudentMain.tsx","screens/SearchResult.tsx","AppRouter.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","classCreatedDate","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","componentDidMount","auth","onAuthStateChanged","user","firestore","collection","doc","uid","onSnapshot","info","userInfo","data","isManager","history","push","userSignin","email","password","signInWithEmailAndPassword","then","result","console","log","catch","error","studentSignin","emailAddress","e","setState","target","value","_this2","window","innerWidth","react_default","a","createElement","id","style","width","textAlign","margin","border","borderRadius","padding","marginLeft","autoComplete","type","name","placeholder","required","onChange","handleEmailChange","handlePWChange","Button","variant","marginRight","marginBottom","onClick","react_router_dom","to","textDecoration","color","React","Component","currentTime","Date","ClassModal","handleChange","classTerm","classCode","subject","title","startDay","startMonth","startYear","endDay","endMonth","endYear","days","startHour","startMin","endHour","endMin","campus","room","reader","FileReader","readAsArrayBuffer","files","onload","ent","bstr","Uint8Array","wb","XLSX","read","wsname","SheetNames","ws","Sheets","output","utils","sheet_to_json","header","_","size","classInfo","renderTerm","getMonth","Form","Control","as","selected","removeClass","modalData","modalInfo","schoolName","removeClassID","delete","classCodeErr","where","empty","each","docs","getClasse","classData","editClass","day","editClassID","createdAt","timeNow","set","editedAt","term","modalHide","addClass","addingClasses","length","add","toString","modalType","Modal","show","modalOpen","onHide","centered","Header","closeButton","Title","Body","Group","Row","Col","Check","label","defaultChecked","controlId","Label","marginTop","column","sm","md","Footer","disabled","onFocus","Spinner","animation","ManagerMain","isConfirmed","userID","userSchoolName","schoolCode","signOut","clickBtn","classModal","editClassModal","height","lineHeight","cursor","fontWeight","btnFontWeight","fontSize","btnFontSize","components_ClassModal","Signup","signUp","createUserWithEmailAndPassword","studentOrManager","userEmail","firstName","fName","lastName","lName","studentID","handleFNameChange","handleLNameChange","handleSchoolChange","monthArr","daysArr","StudentMain","current","hour","getHours","mins","getMinutes","getDay","year","getFullYear","month","date","getDate","minArr","split","unshift","setHour","parseInt","setYear","setDay","setMonth","setDate","setMin","roomNum","renderNow","now","byTime","byRoom","background","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","className","NavDropdown","Item","onSelect","float","SearchResult","renderResult","currentHour","selectedHour","selectedMin","key","searchInfo","classArr","url","location","pathname","monthIndex","indexOf","semester","get","sortedArr","orderBy","toUpperCase","_this3","AppRouter","overflow","react_router","exact","path","component","App","src_AppRouter","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a47cbb61.chunk.js","sourcesContent":["import firebase from 'firebase';\n\n// Initialize Firebase\nvar config = {\n    apiKey: \"AIzaSyBMPXUl2PERXrbAUtPujHj04Yllk46xfRg\",\n    authDomain: \"csis-4495.firebaseapp.com\",\n    databaseURL: \"https://csis-4495.firebaseio.com\",\n    projectId: \"csis-4495\",\n    storageBucket: \"csis-4495.appspot.com\",\n    messagingSenderId: \"652993270371\",\n    appId: \"1:652993270371:web:979f7522b83bc351\"\n};\nfirebase.initializeApp(config);\n\nexport default firebase;","import React from 'react';\nimport { Modal, Spinner, Button, Form, Col, Row } from 'react-bootstrap';\nimport firebase from '../firebase/firebase';\nimport _ from 'lodash';\nimport XLSX from 'xlsx';\n\ninterface Props {\n    modalInfo: any,\n}\ninterface State {\n    classTerm: string,\n    classCode: string,\n    subject: string,\n    title: string,\n    startDay: string,\n    startMonth: string,\n    startYear: string,\n    endDay: string,\n    endMonth: string,\n    endYear: string,\n    days: string,\n    startHour: string,\n    startMin: string,\n    endHour: string,\n    endMin: string,\n    campus: string,\n    room: string,\n    addingClasses: boolean,\n    classInfo: any,\n    editClass: boolean,\n    classCodeErr: boolean,\n    editClassID: string,\n    removeClassID: string,\n    removeClass: boolean,\n}\nconst currentTime = new Date();\nlet classCreatedDate: any;\nclass ClassModal extends React.Component<Props, State> {\n    public state: State;\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            classTerm: 'Fall 2019',\n            classCode: '',\n            subject: '',\n            title: '',\n            startDay: '',\n            startMonth: '',\n            startYear: '',\n            endDay: '',\n            endMonth: '',\n            endYear: '',\n            days: '',\n            startHour: '',\n            startMin: '',\n            endHour: '',\n            endMin: '',\n            campus: '',\n            room: '',\n            addingClasses: false,\n            classInfo: {},\n            editClass: false,\n            editClassID: '',\n            removeClassID: '',\n            classCodeErr: false,\n            removeClass: false,\n            // schoolCode: '',\n            // title: '',\n            // Term:'',\n        }\n    }\n\n    private handleChange = (e: any) => {\n        switch (e.target.name) {\n            case 'term':\n                this.setState({ classTerm: e.target.value });\n                return;\n            case 'classCode':\n                this.setState({ classCode: e.target.value });\n                return;\n            case 'subject':\n                this.setState({ subject: e.target.value });\n                return;\n            case 'title':\n                this.setState({ title: e.target.value });\n                return;\n            case 'startDay':\n                this.setState({ startDay: e.target.value });\n                return;\n            case 'startMonth':\n                this.setState({ startMonth: e.target.value });\n                return;\n            case 'startYear':\n                this.setState({ startYear: e.target.value });\n                return;\n            case 'endDay':\n                this.setState({ endDay: e.target.value });\n                return;\n            case 'endMonth':\n                this.setState({ endMonth: e.target.value });\n                return;\n            case 'endYear':\n                this.setState({ endYear: e.target.value });\n                return;\n            case 'days':\n                this.setState({ days: e.target.value });\n                return;\n            case 'startHour':\n                this.setState({ startHour: e.target.value });\n                return;\n            case 'startMin':\n                this.setState({ startMin: e.target.value });\n                return;\n            case 'endHour':\n                this.setState({ endHour: e.target.value });\n                return;\n            case 'endMin':\n                this.setState({ endMin: e.target.value });\n                return;\n            case 'campus':\n                this.setState({ campus: e.target.value });\n                return;\n            case 'room':\n                this.setState({ room: e.target.value });\n                return;\n            case 'classInfo':\n                const reader = new FileReader();\n                reader.readAsArrayBuffer(e.target.files[0]);\n\n                reader.onload = (ent) => {\n                    console.log('file onload');\n                    const bstr: any = reader.result;\n                    let data;\n                    if (bstr !== null) {\n                        data = new Uint8Array(bstr);\n                    }\n                    const wb = XLSX.read(data, { type: 'array' });\n                    const wsname = wb.SheetNames[0];\n                    const ws = wb.Sheets[wsname];\n                    const output = XLSX.utils.sheet_to_json(ws, { header: 1 });\n                    if (_.size(output) > 0) {\n\n                        this.setState({ classInfo: output });\n                    }\n                }\n\n                return;\n        }\n    }\n\n    private renderTerm = () => {\n        let defaultTerm;\n        if (currentTime.getMonth() <= 3) {\n            defaultTerm =\n                <Form.Control as=\"select\" name='term' onChange={(e: any) => { this.handleChange(e) }}>\n                    <option selected>Summer 2019</option>\n                    <option>Fall 2019</option>\n                    <option>Winter 2020</option>\n                </Form.Control>\n            return defaultTerm;\n        } else if (currentTime.getMonth() <= 7 && currentTime.getMonth() >= 4) {\n            defaultTerm =\n                <Form.Control as=\"select\" name='term' onChange={(e: any) => { this.handleChange(e) }}>\n                    <option >Summer 2019</option>\n                    <option selected>Fall 2019</option>\n                    <option>Winter 2020</option>\n                </Form.Control>\n            return defaultTerm;\n        } else if (currentTime.getMonth() <= 11 && currentTime.getMonth() >= 8) {\n            defaultTerm =\n                <Form.Control as=\"select\" name='term' onChange={(e: any) => { this.handleChange(e) }}>\n                    <option>Summer 2019</option>\n                    <option>Fall 2019</option>\n                    <option selected>Winter 2020</option>\n                </Form.Control>\n            return defaultTerm;\n        }\n    }\n\n    private removeClass = () => {\n        const modalData = this.props.modalInfo;\n        if (this.state.removeClass) {\n            firebase.firestore().collection(modalData.schoolName).doc(this.state.removeClassID).delete()\n                .then(() => {\n                    console.log('class removed');\n                    this.setState({ removeClass: false });\n                    this.setState({ classCode: '' });\n                    this.setState({ classCodeErr: false });\n                    this.setState({ removeClassID: '' });\n                });\n        } else {\n            firebase.firestore().collection(modalData.schoolName).where('classCode', '==', this.state.classCode).onSnapshot((result) => {\n                console.log(result);\n                if (result.empty) {\n                    this.setState({ classCode: 'No class found' });\n                    this.setState({ classCodeErr: true });\n                } else {\n                    this.setState({ classCodeErr: false });\n                    _.each(result.docs, (data) => {\n                        this.setState({ removeClassID: data.id });\n                    });\n                    this.setState({ removeClass: true });\n                }\n            });\n        }\n    }\n\n    private getClasse = () => {\n        const modalData = this.props.modalInfo;\n        firebase.firestore().collection(modalData.schoolName).where('classCode', '==', this.state.classCode).onSnapshot((result) => {\n            console.log(result);\n\n            if (result.empty) {\n                this.setState({ classCode: 'No class found' });\n                this.setState({ classCodeErr: true });\n            } else {\n                _.each(result.docs, (data) => {\n                    const classData = data.data();\n                    console.log(classData);\n                    console.log(data);\n                    this.setState({ classCodeErr: false });\n                    this.setState({ editClass: true });\n                    this.setState({ campus: classData.campus });\n                    this.setState({ classCode: classData.classCode });\n                    this.setState({ subject: classData.subject });\n                    this.setState({ title: classData.title });\n                    this.setState({ startDay: classData.startDay });\n                    this.setState({ startMonth: classData.startMonth });\n                    this.setState({ startYear: classData.startYear });\n                    this.setState({ endDay: classData.endDay });\n                    this.setState({ endMonth: classData.endMonth });\n                    this.setState({ endYear: classData.endYear });\n                    this.setState({ days: classData.day });\n                    this.setState({ startHour: classData.startHour });\n                    this.setState({ startMin: classData.startMin });\n                    this.setState({ endHour: classData.endHour });\n                    this.setState({ endMin: classData.endMin });\n                    this.setState({ room: classData.room });\n                    this.setState({ editClassID: data.id });\n                    classCreatedDate = classData.createdAt\n                })\n            }\n        })\n    }\n    private editClass = () => {\n        const timeNow = new Date();\n        const modalData = this.props.modalInfo;\n        console.log('edit');\n        firebase.firestore().collection(modalData.schoolName).doc(this.state.editClassID).set(\n            {\n                subject: this.state.subject,\n                classCode: this.state.classCode,\n                createdAt: classCreatedDate,\n                editedAt: timeNow,\n                title: this.state.title,\n                startDay: this.state.startDay,\n                startMonth: this.state.startMonth,\n                startYear: this.state.startYear,\n                endDay: this.state.endDay,\n                endMonth: this.state.endMonth,\n                endYear: this.state.endYear,\n                day: this.state.days,\n                startHour: this.state.startHour,\n                startMin: this.state.startMin,\n                endHour: this.state.endHour,\n                endMin: this.state.endMin,\n                campus: this.state.campus,\n                room: this.state.room,\n                term: this.state.classTerm,\n            }\n        ).then((result) => {\n            console.log(result);\n            this.setState({ campus: '' });\n            this.setState({ classCode: '' });\n            this.setState({ subject: '' });\n            this.setState({ title: '' });\n            this.setState({ startDay: '' });\n            this.setState({ startMonth: '' });\n            this.setState({ startYear: '' });\n            this.setState({ endDay: '' });\n            this.setState({ endMonth: '' });\n            this.setState({ endYear: '' });\n            this.setState({ days: '' });\n            this.setState({ startHour: '' });\n            this.setState({ startMin: '' });\n            this.setState({ endHour: '' });\n            this.setState({ endMin: '' });\n            this.setState({ room: '' });\n            this.setState({ classCodeErr: false });\n            this.setState({ editClass: false });\n            this.setState({ editClassID: '' });\n            classCreatedDate = '';\n            this.props.modalInfo.modalHide();\n        });\n    }\n\n    private addClass = () => {\n        const timeNow = new Date();\n        const modalData = this.props.modalInfo;\n\n        if (this.state.addingClasses) {\n            _.each(this.state.classInfo, (data) => {\n                if (data.length < 17) {\n                    console.log('error');\n                } else {\n\n                    firebase.firestore().collection(modalData.schoolName).add(\n                        {\n                            createdAt: timeNow,\n                            classCode: data[0].toString(),\n                            subject: data[1],\n                            title: data[2],\n                            startDay: data[3].toString(),\n                            startMonth: data[4].toString(),\n                            startYear: data[5].toString(),\n                            endDay: data[6].toString(),\n                            endMonth: data[7].toString(),\n                            endYear: data[8].toString(),\n                            day: data[9],\n                            startHour: data[10].toString(),\n                            startMin: data[11].toString() === '0' ? '00' : data[11].toString(),\n                            endHour: data[12].toString(),\n                            endMin: data[13].toString() === '0' ? '00' : data[13].toString(),\n                            campus: data[14],\n                            room: data[15].toString(),\n                            term: data[16],\n                        }\n                    ).then((result) => {\n                        this.props.modalInfo.modalHide();\n                        console.log(result);\n                    });\n                }\n            });\n        } else {\n            firebase.firestore().collection(modalData.schoolName).where('classCode', '==', this.state.classCode).onSnapshot((result) => {\n                if (result.empty) {\n                    firebase.firestore().collection(modalData.schoolName).add(\n                        {\n                            createdAt: timeNow,\n                            classCode: this.state.classCode,\n                            subject: this.state.subject,\n                            title: this.state.title,\n                            startDay: this.state.startDay,\n                            startMonth: this.state.startMonth,\n                            startYear: this.state.startYear,\n                            endDay: this.state.endDay,\n                            endMonth: this.state.endMonth,\n                            endYear: this.state.endYear,\n                            day: this.state.days,\n                            startHour: this.state.startHour,\n                            startMin: this.state.startMin,\n                            endHour: this.state.endHour,\n                            endMin: this.state.endMin,\n                            campus: this.state.campus,\n                            room: this.state.room,\n                            term: this.state.classTerm,\n                        }\n                    ).then((result) => {\n                        console.log(result);\n                        this.setState({ campus: '' });\n                        this.setState({ classCode: '' });\n                        this.setState({ subject: '' });\n                        this.setState({ title: '' });\n                        this.setState({ startDay: '' });\n                        this.setState({ startMonth: '' });\n                        this.setState({ startYear: '' });\n                        this.setState({ endDay: '' });\n                        this.setState({ endMonth: '' });\n                        this.setState({ endYear: '' });\n                        this.setState({ days: '' });\n                        this.setState({ startHour: '' });\n                        this.setState({ startMin: '' });\n                        this.setState({ endHour: '' });\n                        this.setState({ endMin: '' });\n                        this.setState({ room: '' });\n                        this.setState({ classCodeErr: false });\n                        this.props.modalInfo.modalHide();\n                    });\n                } else {\n                    this.setState({ classCodeErr: true });\n                    this.setState({ classCode: 'Code already exist' });\n                }\n            });\n        }\n    }\n\n    render() {\n        const modalData = this.props.modalInfo;\n        if (modalData.modalType === 'add') {\n            return (\n                <Modal\n                    show={modalData.modalOpen}\n                    onHide={() => modalData.modalHide()}\n                    // size=\"sm\"\n                    centered>\n                    <Modal.Header closeButton>\n                        <Modal.Title id=\"contained-modal-title-vcenter\" style={{ textAlign: 'center' }}>\n                            {modalData.schoolName}\n                        </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body style={{ textAlign: 'center' }}>\n                        <fieldset>\n                            <Form.Group>\n                                <Row>\n                                    <Col>\n                                        <Form.Check\n                                            type=\"radio\"\n                                            label=\"Adding a class\"\n                                            name=\"formHorizontalRadios\"\n                                            id=\"formHorizontalRadios1\"\n                                            onChange={() => { this.setState({ addingClasses: false }) }}\n                                            defaultChecked\n                                        />\n                                    </Col>\n                                    <Col>\n                                        <Form.Check\n                                            type=\"radio\"\n                                            label=\"Adding classes\"\n                                            name=\"formHorizontalRadios\"\n                                            id=\"formHorizontalRadios2\"\n                                            onChange={() => { this.setState({ addingClasses: true }) }}\n                                        />\n                                    </Col>\n                                </Row>\n                            </Form.Group>\n                        </fieldset>\n                        {this.state.addingClasses ?\n                            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                                <Form.Label>Select an Excel file</Form.Label>\n                                <Form.Control type='file' name=\"classInfo\"\n                                    onChange={(e: any) => { this.handleChange(e) }}\n                                    // placeholder='classCode: 123456,subject: CSIS-1234,title: Database,startDate: 2019-09-03,endDate: 2019-12-20,day: Monday,time: 11:30-14:20,campus: New Westminster,room: N5111 / classCode: 123455,subject: CSIS-1233,title: Web programming,startDate: 2019-09-03,endDate: 2019-12-20,day: Tuesday,time: 11:30-14:20,campus: New Westminster,room: N5111 / classCode: 123454,subject: CSIS-1232,title: Applied Research,startDate: 2019-09-03,endDate: 2019-12-20,day: Wednesday,time: 12:30-15:20,campus: New Westminster,room: N6109' />\n                                    placeholder='Upload file' />\n                                {/* <input type='file'></input> */}\n                            </Form.Group>\n                            :\n                            <Form style={{ border: '1px solid', padding: 20, borderRadius: 20, marginTop: 20 }}>\n                                <Form.Group as={Row} controlId=\"formHorizontalSchool\">\n                                    <Form.Label column sm={2}>\n                                        Term\n                        </Form.Label>\n                                    <Col sm={10}>\n                                        {this.renderTerm()}\n                                    </Col>\n                                </Form.Group>\n                                <Form.Group as={Row} controlId=\"formHorizontalCode\">\n                                    <Form.Label column sm={2}>\n                                        Class Code\n                        </Form.Label>\n                                    <Col sm={10}>\n                                        <Form.Control type=\"text\" placeholder=\"Class Code\" name='classCode'\n                                            style={{ border: this.state.classCodeErr ? '2px solid rgb(210, 0, 0)' : '1px solid #ced4da' }}\n                                            value={this.state.classCode} onChange={(e: any) => { this.handleChange(e) }} />\n                                    </Col>\n                                </Form.Group>\n\n                                <Form.Group as={Row} controlId=\"formHorizontalSubject\">\n                                    <Form.Label column sm={2}>\n                                        Subject\n                        </Form.Label>\n                                    <Col sm={10}>\n                                        <Form.Control type=\"text\" placeholder=\"Subject\" name='subject'\n                                            value={this.state.subject} onChange={(e: any) => { this.handleChange(e) }} />\n                                    </Col>\n                                </Form.Group>\n                                <Form.Group as={Row} controlId=\"formHorizontalTitle\">\n                                    <Form.Label column sm={2}>\n                                        Title\n                        </Form.Label>\n                                    <Col sm={10}>\n                                        <Form.Control type=\"text\" placeholder=\"Title\" name='title'\n                                            value={this.state.title} onChange={(e: any) => { this.handleChange(e) }} />\n                                    </Col>\n                                </Form.Group>\n                                {/* <Form.Group as={Row} controlId=\"formHorizontalStartDate\">\n                                    <Form.Label column sm={2}>\n                                        Start Date\n                        </Form.Label>\n                                    <Col sm={10}>\n                                        <Form.Control type=\"date\" placeholder=\"Start date\" name='startDate'\n                                            value={this.state.startDate} onChange={(e: any) => { this.handleChange(e) }} />\n                                    </Col>\n                                </Form.Group> */}\n\n                                <Form.Row>\n                                    <Form.Label column sm={2}>\n                                        {/* <Form.Label column sm={2}> */}\n                                        Start Date\n                                </Form.Label>\n                                    <Form.Group as={Col} controlId=\"formGridCity\">\n                                        <Form.Control as=\"select\" name='startMonth'\n                                            onChange={(e: any) => { this.handleChange(e) }}>\n                                            <option selected>Month</option>\n                                            <option>Jan</option>\n                                            <option>Feb</option>\n                                            <option>Mar</option>\n                                            <option>Apr</option>\n                                            <option>May</option>\n                                            <option>Jun</option>\n                                            <option>Jul</option>\n                                            <option>Aug</option>\n                                            <option>Sep</option>\n                                            <option>Oct</option>\n                                            <option>Nov</option>\n                                            <option>Dec</option>\n                                        </Form.Control>\n                                    </Form.Group>\n\n                                    <Form.Group as={Col} controlId=\"formGridState\">\n                                        <Form.Control as=\"select\" name='startDay'\n                                            onChange={(e: any) => { this.handleChange(e) }}>\n                                            <option selected>Day</option>\n                                            <option>1</option>\n                                            <option>2</option>\n                                            <option>3</option>\n                                            <option>4</option>\n                                            <option>5</option>\n                                            <option>6</option>\n                                            <option>7</option>\n                                            <option>8</option>\n                                            <option>9</option>\n                                            <option>10</option>\n                                            <option>11</option>\n                                            <option>12</option>\n                                            <option>13</option>\n                                            <option>14</option>\n                                            <option>15</option>\n                                            <option>16</option>\n                                            <option>17</option>\n                                            <option>18</option>\n                                            <option>19</option>\n                                            <option>20</option>\n                                            <option>21</option>\n                                            <option>22</option>\n                                            <option>23</option>\n                                            <option>24</option>\n                                            <option>25</option>\n                                            <option>26</option>\n                                            <option>27</option>\n                                            <option>28</option>\n                                            <option>29</option>\n                                            <option>30</option>\n                                            <option>31</option>\n                                        </Form.Control>\n                                    </Form.Group>\n\n                                    <Form.Group as={Col} controlId=\"formGridZip\">\n                                        <Form.Control as=\"select\" name='startYear'\n                                            onChange={(e: any) => { this.handleChange(e) }}>\n                                            <option selected>Year</option>\n                                            <option>2019</option>\n                                            <option>2020</option>\n                                        </Form.Control>\n                                    </Form.Group>\n                                </Form.Row>\n\n                                <Form.Row>\n                                    <Form.Label column sm={2}>\n                                        End Date\n                                     </Form.Label>\n                                    <Form.Group as={Col} controlId=\"formGridCity\">\n                                        <Form.Control as=\"select\" name='endMonth'\n                                            onChange={(e: any) => { this.handleChange(e) }}>\n                                            <option selected>Month</option>\n                                            <option>Jan</option>\n                                            <option>Feb</option>\n                                            <option>Mar</option>\n                                            <option>Apr</option>\n                                            <option>May</option>\n                                            <option>Jun</option>\n                                            <option>Jul</option>\n                                            <option>Aug</option>\n                                            <option>Sep</option>\n                                            <option>Oct</option>\n                                            <option>Nov</option>\n                                            <option>Dec</option>\n                                        </Form.Control>\n                                    </Form.Group>\n\n                                    <Form.Group as={Col} controlId=\"formGridState\">\n                                        <Form.Control as=\"select\" name='endDay'\n                                            onChange={(e: any) => { this.handleChange(e) }}>\n                                            <option selected>Day</option>\n                                            <option>1</option>\n                                            <option>2</option>\n                                            <option>3</option>\n                                            <option>4</option>\n                                            <option>5</option>\n                                            <option>6</option>\n                                            <option>7</option>\n                                            <option>8</option>\n                                            <option>9</option>\n                                            <option>10</option>\n                                            <option>11</option>\n                                            <option>12</option>\n                                            <option>13</option>\n                                            <option>14</option>\n                                            <option>15</option>\n                                            <option>16</option>\n                                            <option>17</option>\n                                            <option>18</option>\n                                            <option>19</option>\n                                            <option>20</option>\n                                            <option>21</option>\n                                            <option>22</option>\n                                            <option>23</option>\n                                            <option>24</option>\n                                            <option>25</option>\n                                            <option>26</option>\n                                            <option>27</option>\n                                            <option>28</option>\n                                            <option>29</option>\n                                            <option>30</option>\n                                            <option>31</option>\n                                        </Form.Control>\n                                    </Form.Group>\n\n                                    <Form.Group as={Col} controlId=\"formGridZip\">\n                                        <Form.Control as=\"select\" name='endYear'\n                                            onChange={(e: any) => { this.handleChange(e) }}>\n                                            <option selected>Year</option>\n                                            <option>2019</option>\n                                            <option>2020</option>\n                                        </Form.Control>\n                                    </Form.Group>\n                                </Form.Row>\n\n                                <Form.Group as={Row} controlId=\"formHorizontalDays\">\n                                    <Form.Label column sm={2}>\n                                        Days\n                                    </Form.Label>\n                                    <Col sm={10}>\n                                        {/* <Form.Control type=\"text\" placeholder=\"Days\" name='days'\n                                        value={this.state.days} onChange={(e: any) => { this.handleChange(e) }} /> */}\n                                        <Form.Control as=\"select\" name='days'\n                                            onChange={(e: any) => { this.handleChange(e) }}>\n                                            <option selected>Select</option>\n                                            <option value='Monday'>Monday</option>\n                                            <option>Tuesday</option>\n                                            <option>Wednesday</option>\n                                            <option>Thursday</option>\n                                            <option>Friday</option>\n                                            <option>Saturday</option>\n                                            <option>Sunday</option>\n                                        </Form.Control>\n                                    </Col>\n                                </Form.Group>\n\n                                {/* <Form.Group as={Row} controlId=\"formHorizontalTime\">\n                                    <Form.Label column sm={2}>\n                                        Time\n                                    </Form.Label>\n                                    <Col sm={10}>\n                                        <Form.Control type=\"text\" placeholder=\"Time\" name='time'\n                                            value={this.state.time} onChange={(e: any) => { this.handleChange(e) }} />\n                                    </Col>\n                                </Form.Group> */}\n\n                                <Form.Row>\n                                    <Form.Label column sm={2}>\n                                        Time\n                                     </Form.Label>\n                                    <Form.Group as={Col} controlId=\"formGridCity\">\n                                        <Form.Control as=\"select\" name='startHour'\n                                            onChange={(e: any) => { this.handleChange(e) }}>\n                                            <option selected>Hour</option>\n                                            <option>1</option>\n                                            <option>2</option>\n                                            <option>3</option>\n                                            <option>4</option>\n                                            <option>5</option>\n                                            <option>6</option>\n                                            <option>7</option>\n                                            <option>8</option>\n                                            <option>9</option>\n                                            <option>10</option>\n                                            <option>11</option>\n                                            <option>12</option>\n                                            <option>13</option>\n                                            <option>14</option>\n                                            <option>15</option>\n                                            <option>16</option>\n                                            <option>17</option>\n                                            <option>18</option>\n                                            <option>19</option>\n                                            <option>20</option>\n                                            <option>21</option>\n                                            <option>22</option>\n                                            <option>23</option>\n                                            <option>24</option>\n                                        </Form.Control>\n                                    </Form.Group>\n                                    <Form.Label column md='auto'>\n                                        :\n                                     </Form.Label>\n                                    <Form.Group as={Col} controlId=\"formGridState\">\n                                        <Form.Control as=\"select\" name='startMin'\n                                            onChange={(e: any) => { this.handleChange(e) }}>\n                                            <option selected>Min</option>\n                                            <option>00</option>\n                                            <option>10</option>\n                                            <option>20</option>\n                                            <option>30</option>\n                                            <option>40</option>\n                                            <option>50</option>\n                                        </Form.Control>\n                                    </Form.Group>\n                                    <Form.Label column md='auto'>\n                                        ~\n                                     </Form.Label>\n                                    <Form.Group as={Col} controlId=\"formGridCity\">\n                                        <Form.Control as=\"select\" name='endHour'\n                                            onChange={(e: any) => { this.handleChange(e) }}>\n                                            <option selected>Hour</option>\n                                            <option>1</option>\n                                            <option>2</option>\n                                            <option>3</option>\n                                            <option>4</option>\n                                            <option>5</option>\n                                            <option>6</option>\n                                            <option>7</option>\n                                            <option>8</option>\n                                            <option>9</option>\n                                            <option>10</option>\n                                            <option>11</option>\n                                            <option>12</option>\n                                            <option>13</option>\n                                            <option>14</option>\n                                            <option>15</option>\n                                            <option>16</option>\n                                            <option>17</option>\n                                            <option>18</option>\n                                            <option>19</option>\n                                            <option>20</option>\n                                            <option>21</option>\n                                            <option>22</option>\n                                            <option>23</option>\n                                            <option>24</option>\n                                        </Form.Control>\n                                    </Form.Group>\n                                    <Form.Label column md='auto'>\n                                        :\n                                     </Form.Label>\n                                    <Form.Group as={Col} controlId=\"formGridState\">\n                                        <Form.Control as=\"select\" name='endMin'\n                                            onChange={(e: any) => { this.handleChange(e) }}>\n                                            <option selected>Min</option>\n                                            <option>00</option>\n                                            <option>10</option>\n                                            <option>20</option>\n                                            <option>30</option>\n                                            <option>40</option>\n                                            <option>50</option>\n                                        </Form.Control>\n                                    </Form.Group>\n                                </Form.Row>\n\n                                <Form.Group as={Row} controlId=\"formHorizontalCampus\">\n                                    <Form.Label column sm={2}>\n                                        Campus\n                        </Form.Label>\n                                    <Col sm={10}>\n                                        <Form.Control type=\"text\" placeholder=\"Campus\" name='campus'\n                                            value={this.state.campus} onChange={(e: any) => { this.handleChange(e) }} />\n                                    </Col>\n                                </Form.Group>\n                                <Form.Group as={Row} controlId=\"formHorizontalRoom\">\n                                    <Form.Label column sm={2}>\n                                        Room\n                        </Form.Label>\n                                    <Col sm={10}>\n                                        <Form.Control type=\"text\" placeholder=\"Room\" name='room'\n                                            value={this.state.room} onChange={(e: any) => { this.handleChange(e) }} />\n                                    </Col>\n                                </Form.Group>\n                            </Form>\n                        }\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <div>\n                            {console.log(this.state.classInfo)}\n                            {_.size(this.state.classInfo) > 0 && this.state.addingClasses ? <Button onClick={() => { this.addClass() }}\n                                style={{ marginLeft: 100 }}>\n                                Add classes</Button> :\n                                this.state.classCode && this.state.subject && this.state.title &&\n                                    this.state.startYear && this.state.endYear && this.state.days && this.state.endMin &&\n                                    this.state.campus && this.state.room ?\n                                    <Button onClick={() => { this.addClass() }}\n                                        style={{ marginLeft: 100 }}>\n                                        Add a class</Button>\n                                    :\n                                    <Button type=\"submit\" disabled\n                                        style={{ marginLeft: 100 }}> Add a class</Button>\n                            }\n                        </div>\n                    </Modal.Footer>\n                </Modal>\n            );\n        } else if (modalData.modalType === 'edit') {\n            return (\n                <div>\n                    <Modal\n                        show={modalData.modalOpen}\n                        onHide={() => modalData.modalHide()}\n                        // size=\"sm\"\n                        centered>\n                        <Modal.Header closeButton>\n                            <Modal.Title id=\"contained-modal-title-vcenter\" style={{ textAlign: 'center' }}>\n                                Edit a class\n                                    </Modal.Title>\n                        </Modal.Header>\n                        {this.state.editClass ?\n                            <Modal.Body style={{ textAlign: 'center' }}>\n\n                                <Form style={{ border: '1px solid', padding: 20, borderRadius: 20, marginTop: 20 }}>\n                                    <Form.Group as={Row} controlId=\"formHorizontalCode\">\n                                        <Form.Label column sm={2}>\n                                            Class Code\n                                    </Form.Label>\n                                        <Col sm={10}>\n                                            <Form.Control type=\"text\" placeholder=\"Enter Class Code\" name='classCode' disabled\n                                                value={this.state.classCode} onChange={(e: any) => { this.handleChange(e) }} />\n                                        </Col>\n                                    </Form.Group>\n\n                                    <Form.Group as={Row} controlId=\"formHorizontalSchool\">\n                                        <Form.Label column sm={2}>\n                                            Term\n                                    </Form.Label>\n                                        <Col sm={10}>\n                                            {this.renderTerm()}\n                                        </Col>\n                                    </Form.Group>\n\n                                    <Form.Group as={Row} controlId=\"formHorizontalSubject\">\n                                        <Form.Label column sm={2}>\n                                            Subject\n                                    </Form.Label>\n                                        <Col sm={10}>\n                                            <Form.Control type=\"text\" placeholder=\"Subject\" name='subject'\n                                                value={this.state.subject} onChange={(e: any) => { this.handleChange(e) }} />\n                                        </Col>\n                                    </Form.Group>\n                                    <Form.Group as={Row} controlId=\"formHorizontalTitle\">\n                                        <Form.Label column sm={2}>\n                                            Title\n                                    </Form.Label>\n                                        <Col sm={10}>\n                                            <Form.Control type=\"text\" placeholder=\"Title\" name='title'\n                                                value={this.state.title} onChange={(e: any) => { this.handleChange(e) }} />\n                                        </Col>\n                                    </Form.Group>\n\n                                    <Form.Row>\n                                        <Form.Label column sm={2}>\n                                            {/* <Form.Label column sm={2}> */}\n                                            Start Date\n                                </Form.Label>\n                                        <Form.Group as={Col} controlId=\"formGridCity\">\n                                            <Form.Control as=\"select\" name='startMonth' value={this.state.startMonth}\n                                                onChange={(e: any) => { this.handleChange(e) }}>\n                                                <option selected>Month</option>\n                                                <option>Jan</option>\n                                                <option>Feb</option>\n                                                <option>Mar</option>\n                                                <option>Apr</option>\n                                                <option>May</option>\n                                                <option>Jun</option>\n                                                <option>Jul</option>\n                                                <option>Aug</option>\n                                                <option>Sep</option>\n                                                <option>Oct</option>\n                                                <option>Nov</option>\n                                                <option>Dec</option>\n                                            </Form.Control>\n                                        </Form.Group>\n\n                                        <Form.Group as={Col} controlId=\"formGridState\">\n                                            <Form.Control as=\"select\" name='startDay' value={this.state.startDay}\n                                                onChange={(e: any) => { this.handleChange(e) }}>\n                                                <option selected>Day</option>\n                                                <option>1</option>\n                                                <option>2</option>\n                                                <option>3</option>\n                                                <option>4</option>\n                                                <option>5</option>\n                                                <option>6</option>\n                                                <option>7</option>\n                                                <option>8</option>\n                                                <option>9</option>\n                                                <option>10</option>\n                                                <option>11</option>\n                                                <option>12</option>\n                                                <option>13</option>\n                                                <option>14</option>\n                                                <option>15</option>\n                                                <option>16</option>\n                                                <option>17</option>\n                                                <option>18</option>\n                                                <option>19</option>\n                                                <option>20</option>\n                                                <option>21</option>\n                                                <option>22</option>\n                                                <option>23</option>\n                                                <option>24</option>\n                                                <option>25</option>\n                                                <option>26</option>\n                                                <option>27</option>\n                                                <option>28</option>\n                                                <option>29</option>\n                                                <option>30</option>\n                                                <option>31</option>\n                                            </Form.Control>\n                                        </Form.Group>\n\n                                        <Form.Group as={Col} controlId=\"formGridZip\">\n                                            <Form.Control as=\"select\" name='startYear' value={this.state.startYear}\n                                                onChange={(e: any) => { this.handleChange(e) }}>\n                                                <option selected>Year</option>\n                                                <option>2019</option>\n                                                <option>2020</option>\n                                            </Form.Control>\n                                        </Form.Group>\n                                    </Form.Row>\n\n                                    <Form.Row>\n                                        <Form.Label column sm={2}>\n                                            End Date\n                                    </Form.Label>\n                                        <Form.Group as={Col} controlId=\"formGridCity\">\n                                            <Form.Control as=\"select\" name='endMonth' value={this.state.endMonth}\n                                                onChange={(e: any) => { this.handleChange(e) }}>\n                                                <option selected>Month</option>\n                                                <option>Jan</option>\n                                                <option>Feb</option>\n                                                <option>Mar</option>\n                                                <option>Apr</option>\n                                                <option>May</option>\n                                                <option>Jun</option>\n                                                <option>Jul</option>\n                                                <option>Aug</option>\n                                                <option>Sep</option>\n                                                <option>Oct</option>\n                                                <option>Nov</option>\n                                                <option>Dec</option>\n                                            </Form.Control>\n                                        </Form.Group>\n\n                                        <Form.Group as={Col} controlId=\"formGridState\">\n                                            <Form.Control as=\"select\" name='endDay' value={this.state.endDay}\n                                                onChange={(e: any) => { this.handleChange(e) }}>\n                                                <option selected>Day</option>\n                                                <option>1</option>\n                                                <option>2</option>\n                                                <option>3</option>\n                                                <option>4</option>\n                                                <option>5</option>\n                                                <option>6</option>\n                                                <option>7</option>\n                                                <option>8</option>\n                                                <option>9</option>\n                                                <option>10</option>\n                                                <option>11</option>\n                                                <option>12</option>\n                                                <option>13</option>\n                                                <option>14</option>\n                                                <option>15</option>\n                                                <option>16</option>\n                                                <option>17</option>\n                                                <option>18</option>\n                                                <option>19</option>\n                                                <option>20</option>\n                                                <option>21</option>\n                                                <option>22</option>\n                                                <option>23</option>\n                                                <option>24</option>\n                                                <option>25</option>\n                                                <option>26</option>\n                                                <option>27</option>\n                                                <option>28</option>\n                                                <option>29</option>\n                                                <option>30</option>\n                                                <option>31</option>\n                                            </Form.Control>\n                                        </Form.Group>\n\n                                        <Form.Group as={Col} controlId=\"formGridZip\">\n                                            <Form.Control as=\"select\" name='endYear' value={this.state.endYear}\n                                                onChange={(e: any) => { this.handleChange(e) }}>\n                                                <option selected>Year</option>\n                                                <option>2019</option>\n                                                <option>2020</option>\n                                            </Form.Control>\n                                        </Form.Group>\n                                    </Form.Row>\n\n                                    <Form.Group as={Row} controlId=\"formHorizontalDays\">\n                                        <Form.Label column sm={2}>\n                                            Days\n                                    </Form.Label>\n                                        <Col sm={10}>\n                                            {/* <Form.Control type=\"text\" placeholder=\"Days\" name='days'\n                                        value={this.state.days} onChange={(e: any) => { this.handleChange(e) }} /> */}\n                                            <Form.Control as=\"select\" name='days' value={this.state.days}\n                                                onChange={(e: any) => { this.handleChange(e) }}>\n                                                <option selected>Select</option>\n                                                <option>Monday</option>\n                                                <option>Tuesday</option>\n                                                <option>Wednesday</option>\n                                                <option>Thursday</option>\n                                                <option>Friday</option>\n                                                <option>Saturday</option>\n                                                <option>Sunday</option>\n                                            </Form.Control>\n                                        </Col>\n                                    </Form.Group>\n                                    {/* <Form.Group as={Row} controlId=\"formHorizontalTime\">\n                                        <Form.Label column sm={2}>\n                                            Time\n                                    </Form.Label>  \n                                        <Col sm={10}>\n                                            <Form.Control type=\"text\" placeholder=\"Time\" name='time'\n                                                value={this.state.time} onChange={(e: any) => { this.handleChange(e) }} />\n                                        </Col>\n                                    </Form.Group> */}\n\n                                    <Form.Row>\n                                        <Form.Label column sm={2}>\n                                            Time\n                                     </Form.Label>\n                                        <Form.Group as={Col} controlId=\"formGridCity\">\n                                            <Form.Control as=\"select\" name='startHour' value={this.state.startHour}\n                                                onChange={(e: any) => { this.handleChange(e) }}>\n                                                <option selected>Hour</option>\n                                                <option>1</option>\n                                                <option>2</option>\n                                                <option>3</option>\n                                                <option>4</option>\n                                                <option>5</option>\n                                                <option>6</option>\n                                                <option>7</option>\n                                                <option>8</option>\n                                                <option>9</option>\n                                                <option>10</option>\n                                                <option>11</option>\n                                                <option>12</option>\n                                                <option>13</option>\n                                                <option>14</option>\n                                                <option>15</option>\n                                                <option>16</option>\n                                                <option>17</option>\n                                                <option>18</option>\n                                                <option>19</option>\n                                                <option>20</option>\n                                                <option>21</option>\n                                                <option>22</option>\n                                                <option>23</option>\n                                                <option>24</option>\n                                            </Form.Control>\n                                        </Form.Group>\n\n                                        <Form.Label column md='auto'>\n                                            :\n                                     </Form.Label>\n                                        <Form.Group as={Col} controlId=\"formGridState\">\n                                            <Form.Control as=\"select\" name='startMin' value={this.state.startMin}\n                                                onChange={(e: any) => { this.handleChange(e) }}>\n                                                <option selected>Min</option>\n                                                <option>00</option>\n                                                <option>10</option>\n                                                <option>20</option>\n                                                <option>30</option>\n                                                <option>40</option>\n                                                <option>50</option>\n                                            </Form.Control>\n                                        </Form.Group>\n                                        ~\n                                    <Form.Group as={Col} controlId=\"formGridCity\">\n                                            <Form.Control as=\"select\" name='endHour' value={this.state.endHour}\n                                                onChange={(e: any) => { this.handleChange(e) }}>\n                                                <option selected>Hour</option>\n                                                <option>1</option>\n                                                <option>2</option>\n                                                <option>3</option>\n                                                <option>4</option>\n                                                <option>5</option>\n                                                <option>6</option>\n                                                <option>7</option>\n                                                <option>8</option>\n                                                <option>9</option>\n                                                <option>10</option>\n                                                <option>11</option>\n                                                <option>12</option>\n                                                <option>13</option>\n                                                <option>14</option>\n                                                <option>15</option>\n                                                <option>16</option>\n                                                <option>17</option>\n                                                <option>18</option>\n                                                <option>19</option>\n                                                <option>20</option>\n                                                <option>21</option>\n                                                <option>22</option>\n                                                <option>23</option>\n                                                <option>24</option>\n                                            </Form.Control>\n                                        </Form.Group>\n                                        :\n                                    <Form.Group as={Col} controlId=\"formGridState\">\n                                            <Form.Control as=\"select\" name='endMin' value={this.state.endMin}\n                                                onChange={(e: any) => { this.handleChange(e) }}>\n                                                <option selected>Min</option>\n                                                <option>00</option>\n                                                <option>10</option>\n                                                <option>20</option>\n                                                <option>30</option>\n                                                <option>40</option>\n                                                <option>50</option>\n                                            </Form.Control>\n                                        </Form.Group>\n                                    </Form.Row>\n\n                                    <Form.Group as={Row} controlId=\"formHorizontalCampus\">\n                                        <Form.Label column sm={2}>\n                                            Campus\n                                    </Form.Label>\n                                        <Col sm={10}>\n                                            <Form.Control type=\"text\" placeholder=\"Campus\" name='campus'\n                                                value={this.state.campus} onChange={(e: any) => { this.handleChange(e) }} />\n                                        </Col>\n                                    </Form.Group>\n                                    <Form.Group as={Row} controlId=\"formHorizontalRoom\">\n                                        <Form.Label column sm={2}>\n                                            Room\n                                    </Form.Label>\n                                        <Col sm={10}>\n                                            <Form.Control type=\"text\" placeholder=\"Room\" name='room'\n                                                value={this.state.room} onChange={(e: any) => { this.handleChange(e) }} />\n                                        </Col>\n                                    </Form.Group>\n\n                                </Form>\n                            </Modal.Body>\n\n                            :\n\n                            <Modal.Body style={{ textAlign: 'center' }}>\n\n                                <Form style={{ border: '1px solid', padding: 20, borderRadius: 20, marginTop: 20 }}>\n                                    <Form.Group as={Row} controlId=\"formHorizontalCode\">\n                                        <Form.Label column sm={2}>\n                                            Class Code\n                                        </Form.Label>\n                                        <Col sm={10}>\n                                            <Form.Control type=\"text\" placeholder=\"Enter Class Code\" name='classCode'\n                                                style={{ border: this.state.classCodeErr ? '2px solid rgb(210, 0, 0)' : '1px solid #ced4da' }}\n                                                value={this.state.classCode} onChange={(e: any) => { this.handleChange(e) }}\n                                                onFocus={() => { this.setState({ classCode: '' }) }} />\n                                        </Col>\n                                    </Form.Group>\n\n                                </Form>\n                            </Modal.Body>\n                        }\n                        <Modal.Footer>\n                            {this.state.editClass ?\n                                <Button onClick={() => { this.editClass() }}\n                                    style={{ marginLeft: 100 }}>Edit</Button>\n                                :\n                                <Button onClick={() => { this.getClasse() }}\n                                    style={{ marginLeft: 100 }}>Submit</Button>\n                            }\n                        </Modal.Footer>\n                    </Modal>\n                </div>\n            );\n        } else if (modalData.modalType === 'remove') {\n            return (\n                <div>\n                    <Modal\n                        show={modalData.modalOpen}\n                        onHide={() => modalData.modalHide()}\n                        // size=\"sm\"\n                        centered>\n                        <Modal.Header closeButton>\n                            <Modal.Title id=\"contained-modal-title-vcenter\" style={{ textAlign: 'center' }}>\n                                Remove a class\n                                    </Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body style={{ textAlign: 'center' }}>\n                            <Form style={{ border: '1px solid', padding: 20, borderRadius: 20, marginTop: 20 }}>\n                                <Form.Group as={Row} controlId=\"formHorizontalCode\">\n                                    <Form.Label column sm={2}>\n                                        Class Code\n                                        </Form.Label>\n                                    <Col sm={10}>\n                                        <Form.Control type=\"text\" placeholder=\"Enter Class Code\" name='classCode'\n                                            style={{ border: this.state.classCodeErr ? '2px solid rgb(210, 0, 0)' : '1px solid #ced4da' }}\n                                            value={this.state.classCode} onChange={(e: any) => { this.handleChange(e) }}\n                                            onFocus={() => { this.setState({ classCode: '' }) }} />\n                                    </Col>\n                                </Form.Group>\n\n                            </Form>\n                        </Modal.Body>\n                        <Modal.Footer>\n                            {this.state.removeClass ?\n                                <Button variant='danger' onClick={() => { this.removeClass() }}\n                                    style={{ marginLeft: 100 }}>Confirm</Button>\n                                :\n                                <Button onClick={() => { this.removeClass() }}\n                                    style={{ marginLeft: 100 }}>Remove</Button>\n                            }\n                        </Modal.Footer>\n                    </Modal>\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    {\n                        modalData.modalOpen ?\n                            <Spinner animation='border'></Spinner>\n                            :\n                            null\n                    }\n                </div>\n            );\n        }\n    }\n}\nexport default ClassModal;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport firebase from '../firebase/firebase';\n\ninterface Props {\n    history: any,\n}\ninterface State {\n    emailAddress: string,\n    password: string,\n}\n\nclass Login extends React.Component<Props, State> {\n    public state: State;\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            emailAddress: '',\n            password: '',\n\n        }\n    }\n\n    componentDidMount = () => {\n        firebase.auth().onAuthStateChanged((user) => {\n            if (user) {\n                firebase.firestore().collection('users').doc(user.uid).onSnapshot((info) => {\n                    // this.setState({ userInfo: info.data() })\n                    const userInfo = info.data();\n                    if (userInfo) {\n                        if (userInfo.isManager) {\n                            this.props.history.push('/managerMain');\n                        } else {\n                            this.props.history.push('/studentMain');\n                        }\n                    }\n                });\n            }\n\n        });\n    }\n\n    private userSignin = (email: any, password: any) => {\n        firebase.auth().signInWithEmailAndPassword(email, password).then((result) => {\n            console.log(result);\n            if (result.user) {\n                firebase.firestore().collection('users').doc(result.user.uid).onSnapshot((info) => {\n                    const userInfo = info.data();\n                    if (userInfo) {\n                        if (userInfo.isManager) {\n                            this.props.history.push('/managerMain');\n                        } else {\n                            this.props.history.push('/studentMain');\n                        }\n                    }\n                })\n            }\n        }).catch(function (error: any) {\n            console.log(error);\n        });\n    }\n    private studentSignin = () => {\n        this.userSignin('student@douglascollege.ca', 'studentstudent');\n    }\n    private handleEmailChange(e: any) {\n        this.setState({ emailAddress: e.target.value });\n    }\n    private handlePWChange(e: any) {\n        this.setState({ password: e.target.value });\n    }\n\n    render() {\n        // this.checkUser();\n        if (window.innerWidth < 800) {\n            return (\n                <div id=\"mainDiv\" style={{ width: '100%', textAlign: 'center' }}>\n                    <br></br><br></br>\n                    <h1>Manager Login</h1><br></br><br></br>\n\n                    <div id='formDiv' style={{\n                        margin: 'auto',\n                        width: '99%',\n                        border: '1px solid',\n                        borderRadius: 10,\n                        padding: 10.\n                    }}>\n                        <form>\n                            <h3 style={{ textAlign: 'left', marginLeft: '5%' }}>Email</h3>\n                            <input style={{ width: '90%' }}\n                                id=\"inputEmail\"\n                                autoComplete=\"off\"\n                                // onFocus={() => { this.renderErrorMsg() }}\n                                type=\"email\"\n                                value={this.state.emailAddress}\n                                name=\"email\"\n                                placeholder=\" example@example.com\"\n                                required\n                                onChange={(e) => { this.handleEmailChange(e) }}\n                            /><br></br><br></br>\n                            <h3 style={{ textAlign: 'left', marginLeft: '5%' }}>Password</h3>\n                            <input style={{ width: '90%' }}\n                                id=\"inputPassword\"\n                                autoComplete=\"off\"\n                                placeholder=\" At least 6 characters\"\n                                type=\"password\"\n                                value={this.state.password}\n                                name=\"password\"\n                                required\n                                onChange={(e) => { this.handlePWChange(e) }}\n                            />\n\n\n                            <br></br><br></br>\n                            {/* <h6>If you do not have an account,</h6>\n                        <h6> click Signup button with email and password you want.</h6> */}\n                            <br></br>\n                            <Button id=\"loginBtn\" variant='secondary' style={{ marginRight: 10, marginBottom: 10 }}\n                                onClick={() => this.studentSignin()}>Student Sign in</Button>\n                            <br></br>\n                            <Button id=\"loginBtn\" variant='primary' style={{ marginRight: 10 }}\n                                onClick={() => this.userSignin(this.state.emailAddress, this.state.password)}>Manager Sign in</Button>\n                            {/* >Sign in</Button> */}\n                            Or\n                        <Button style={{ marginLeft: '10px' }} id=\"signupBtn\" variant='success'\n                            // onClick={() => this.userSignup(this.state.emailAddress, this.state.password)}>Signup</Button>\n                            ><Link to='/signup' style={{ textDecoration: 'none', color: 'white' }}> Manager Sign up</Link></Button>\n                            <br></br><br></br>\n                            {/* <h5 style={{ color: 'red' }}>{this.state.errorMsg}</h5> */}\n                        </form>\n                    </div>\n                    {/* <div id=\"recaptcha-container\"></div> */}\n\n                </div >\n            );\n        } else {\n            return (\n                <div id=\"mainDiv\" style={{ width: '100%', textAlign: 'center' }}>\n                    <br></br><br></br>\n                    <h1>Manager Login</h1><br></br><br></br>\n\n                    <div id='formDiv' style={{\n                        margin: 'auto',\n                        width: '50%',\n                        border: '1px solid',\n                        borderRadius: 10,\n                        padding: 10.\n                    }}>\n                        <form>\n                            <h3 style={{ textAlign: 'left', marginLeft: '5%' }}>Email</h3>\n                            <input style={{ width: '90%' }}\n                                id=\"inputEmail\"\n                                autoComplete=\"off\"\n                                // onFocus={() => { this.renderErrorMsg() }}\n                                type=\"email\"\n                                value={this.state.emailAddress}\n                                name=\"email\"\n                                placeholder=\" example@example.com\"\n                                required\n                                onChange={(e) => { this.handleEmailChange(e) }}\n                            /><br></br><br></br>\n                            <h3 style={{ textAlign: 'left', marginLeft: '5%' }}>Password</h3>\n                            <input style={{ width: '90%' }}\n                                id=\"inputPassword\"\n                                autoComplete=\"off\"\n                                placeholder=\" At least 6 characters\"\n                                type=\"password\"\n                                value={this.state.password}\n                                name=\"password\"\n                                required\n                                onChange={(e) => { this.handlePWChange(e) }}\n                            />\n\n\n                            <br></br><br></br>\n                            <h6>Students do not need Email and Password</h6>\n                            {/* <h6> click Signup button with email and password you want.</h6> */}\n                            <br></br>\n                            <Button id=\"loginBtn\" variant='secondary' style={{ marginRight: 10, marginBottom: 10 }}\n                                onClick={() => this.studentSignin()}>Student Sign in</Button>\n                            <br></br>\n                            <Button id=\"loginBtn\" variant='primary' style={{ marginRight: 10 }}\n                                onClick={() => this.userSignin(this.state.emailAddress, this.state.password)}>Manager Sign in</Button>\n                            {/* >Sign in</Button> */}\n                            Or\n                        <Button style={{ marginLeft: '10px' }} id=\"signupBtn\" variant='success'\n                            // onClick={() => this.userSignup(this.state.emailAddress, this.state.password)}>Signup</Button>\n                            ><Link to='/signup' style={{ textDecoration: 'none', color: 'white' }}> Manager Sign up</Link></Button>\n                            <br></br><br></br>\n                            {/* <h5 style={{ color: 'red' }}>{this.state.errorMsg}</h5> */}\n                        </form>\n                    </div>\n                    {/* <div id=\"recaptcha-container\"></div> */}\n\n                </div >\n\n            );\n        }\n    }\n}\nexport default Login;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Row, Col } from 'react-bootstrap';\nimport firebase from '../firebase/firebase';\nimport '../css/ManagerMain.css';\nimport ClassModal from '../components/ClassModal';\nimport _ from 'lodash';\n\ninterface Props {\n    history: any,\n}\ninterface State {\n    classModal: boolean,\n    editClassModal: boolean,\n    modalType: string,\n    isConfirmed: boolean,\n    userID: string,\n    userSchoolName: string,\n    schoolCode: string,\n}\n\nclass ManagerMain extends React.Component<Props, State> {\n    public state: State;\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            classModal: false,\n            editClassModal: false,\n            modalType: '',\n            isConfirmed: true,\n            userID: '',\n            userSchoolName: '',\n            schoolCode: '',\n        }\n    }\n\n    componentDidMount = () => {\n        firebase.auth().onAuthStateChanged((user) => {\n            if (user) {\n                firebase.firestore().collection('users').doc(user.uid).onSnapshot((info) => {\n                    // this.setState({ userInfo: info.data() })\n                    const userInfo = info.data();\n                    if (userInfo) {\n                        if (userInfo.isManager) {\n                            if (userInfo.isConfirmed) {\n                                this.setState({ isConfirmed: true });\n                                this.setState({ userID: user.uid });\n                                this.setState({ userSchoolName: userInfo.schoolName });\n\n                                firebase.firestore().collection('classes').onSnapshot((result) => {\n                                    _.each(result.docs, (data) => {\n                                        const name = data.data().name;\n                                        const userSchoolName = this.state.userSchoolName;\n                                        if (name === userSchoolName) {\n                                            this.setState({ schoolCode: data.id });\n                                        }\n                                    })\n                                })\n                            } else {\n                                this.setState({ isConfirmed: false });\n\n                            }\n                        } else {\n                            this.props.history.push('/studentMain');\n                        }\n                    }\n                });\n            } else {\n                this.props.history.push('/');\n            }\n        });\n    }\n\n    private signOut = () => {\n        firebase.auth().signOut().then((user) => {\n            console.log(user);\n            console.log('Logged out');\n            this.props.history.push('/');\n        }).catch((error) => {\n            console.log(error);\n        })\n    }\n\n    private clickBtn = (type: string) => {\n        this.setState({ modalType: type });\n        this.setState({ classModal: true });\n    }\n    render() {\n        const modalData = {\n            modalType: this.state.modalType,\n            modalHide: () => { this.setState({ classModal: false }) },\n            modalOpen: this.state.classModal,\n            schoolName: this.state.userSchoolName,\n            schoolCode: this.state.schoolCode,\n        }\n        if (this.state.isConfirmed) {\n            return (\n\n                <div style={{ margin: 'auto', width: '70%', textAlign: 'center' }}>\n                    <Row>\n                        <Col></Col>\n                        <Col><h1 >Manager Page</h1></Col>\n                        <Col>\n                            <h6 id='signOutBtn' style={{\n                                border: '1px solid', width: 110, height: 40,\n                                lineHeight: '35px', marginTop: 10, cursor: 'pointer', borderRadius: 5\n                            }} onClick={() => this.signOut()}>Sign out</h6>\n                        </Col>\n                    </Row>\n                    <br></br>\n                    <Row style={{ width: '100%', marginBottom: 30 }}>\n                        <Col md='auto' id='addBtn' style={{ width: 300, height: 270, margin: 'auto', marginRight: 0 }}>\n                            <Button style={{ width: '100%', height: '100%', fontWeight: btnFontWeight, fontSize: btnFontSize }}\n                                onClick={() => { this.clickBtn('add') }}\n                            >Add a class</Button>\n                        </Col>\n                        <Col md='auto' id='editBtn' style={{ width: 300, height: 270, margin: 'auto', marginLeft: 0 }}>\n                            <Button style={{ width: '100%', height: '100%', fontWeight: btnFontWeight, fontSize: btnFontSize }}\n                                onClick={() => { this.clickBtn('edit') }}\n                            >Edit a class</Button>\n                        </Col>\n                    </Row>\n                    <Row style={{ width: '100%' }}>\n                        <Col md='auto' id='removeBtn' style={{ width: 300, height: 270, margin: 'auto', marginRight: 0 }}>\n                            <Button style={{ width: '100%', height: '100%', fontWeight: btnFontWeight, fontSize: btnFontSize }}\n                                onClick={() => { this.clickBtn('remove') }}>Remove a class</Button>\n                        </Col>\n                        <Col md='auto' id='studentBtn' style={{ width: 300, height: 270, margin: 'auto', marginLeft: 0 }}>\n                            <Link to='studentMain'>\n                                <Button style={{ width: '100%', height: '100%', fontWeight: btnFontWeight, fontSize: btnFontSize }}>Student screen</Button>\n                            </Link>\n\n                        </Col>\n\n                    </Row>\n                    <br></br>\n                    <br></br>\n\n                    <ClassModal\n                        modalInfo={modalData}\n                    />\n\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    Your account is not confirmed yet.\n                    <h6 id='signOutBtn' style={{\n                        border: '1px solid', width: 110, height: 40, textAlign:'center',\n                        lineHeight: '35px', margin: 20, cursor: 'pointer', borderRadius: 5\n                    }} onClick={() => this.signOut()}>Sign out</h6>\n                </div>\n            );\n        }\n\n    }\n}\n\nconst btnFontWeight = 'bold';\nconst btnFontSize = 30;\nexport default ManagerMain;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Form, Col, Row } from 'react-bootstrap';\nimport firebase from '../firebase/firebase';\n\ninterface Props {\n}\ninterface State {\n    studentOrManager: boolean;\n    userEmail: string;\n    password: string;\n    fName: string;\n    lName: string;\n    schoolName: string;\n    studentID: string;\n}\n\nclass Signup extends React.Component<Props, State> {\n    public state: State;\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            studentOrManager: false,\n            userEmail: '',\n            password: '',\n            fName: '',\n            lName: '',\n            schoolName: '',\n            studentID: '',\n        }\n    }\n\n    private signUp = (email: string, password: string) => {\n        console.log(email);\n        console.log(password);\n        const currentTime = new Date();\n        firebase.auth().createUserWithEmailAndPassword(email, password)\n            .then((result) => {\n                if (result.user) {\n                    this.state.studentOrManager ?\n                        firebase.firestore().collection('users').doc(result.user.uid)\n                            .set(\n                                {\n                                    createdAt: currentTime,\n                                    userEmail: result.user.email,\n                                    firstName: this.state.fName,\n                                    lastName: this.state.lName,\n                                    schoolName: this.state.schoolName,\n                                    isManager: this.state.studentOrManager,\n                                    isConfirmed: false,\n                                }\n                            ).then(() => {\n                                // firebase.firestore().collection('classes').doc().set(\n                                //     { name: this.state.schoolName }\n                                // ).then((e)=>{\n                                //     console.log(e);\n                                // })\n                                console.log('User added')\n                            })\n                        :\n                        firebase.firestore().collection('users').doc(result.user.uid)\n                            .set(\n                                {\n                                    createdAt: currentTime,\n                                    userEmail: result.user.email,\n                                    firstName: this.state.fName,\n                                    lastName: this.state.lName,\n                                    schoolName: this.state.schoolName,\n                                    isManager: this.state.studentOrManager,\n                                    userID: this.state.studentID,\n                                }\n                            );\n                }\n                console.log(result)\n            }).catch((error) => {\n                console.log(error);\n            })\n    }\n\n    handleEmailChange(e: any) {\n        this.setState({ userEmail: e.target.value });\n    }\n    handlePWChange(e: any) {\n        this.setState({ password: e.target.value });\n    }\n    handleFNameChange(e: any) {\n        this.setState({ fName: e.target.value });\n    }\n    handleLNameChange(e: any) {\n        this.setState({ lName: e.target.value });\n    }\n    handleSchoolChange(e: any) {\n        this.setState({ schoolName: e.target.value });\n\n    }\n\n    handleStudentIDChange(e: any) {\n        this.setState({ studentID: e.target.value });\n    }\n    render() {\n        console.log(this.state.schoolName);\n        return (\n            <div style={{ width: 700, margin: 'auto', textAlign: 'center' }}>\n                <h1>New account</h1>\n                <Form style={{ border: '1px solid', padding: 20, borderRadius: 20, marginTop: 20 }}>\n                    {/* <fieldset>\n                        <Form.Group>\n                            <Row>\n                                <Col>\n                                    <Form.Check\n                                        type=\"radio\"\n                                        label=\"Student\"\n                                        name=\"formHorizontalRadios\"\n                                        id=\"formHorizontalRadios1\"\n                                        onChange={() => { this.setState({ studentOrManager: false }) }}\n                                        defaultChecked\n                                    />\n                                </Col>\n                                <Col>\n                                    <Form.Check\n                                        type=\"radio\"\n                                        label=\"Manager\"\n                                        name=\"formHorizontalRadios\"\n                                        id=\"formHorizontalRadios2\"\n                                        onChange={() => { this.setState({ studentOrManager: true }) }}\n                                    />\n                                </Col>\n                            </Row>\n                        </Form.Group>\n                    </fieldset> */}\n                    <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n                        <Form.Label column sm={2}>\n                            Email\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control type=\"email\" placeholder=\"Email\"\n                                value={this.state.userEmail} onChange={(e: any) => { this.handleEmailChange(e) }} />\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group as={Row} controlId=\"formHorizontalPassword\">\n                        <Form.Label column sm={2}>\n                            Password\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control type=\"password\" placeholder=\"Password\"\n                                value={this.state.password} onChange={(e: any) => { this.handlePWChange(e) }} />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"formHorizontalFName\">\n                        <Form.Label column sm={2}>\n                            First Name\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control type=\"text\" placeholder=\"First Name\"\n                                value={this.state.fName} onChange={(e: any) => { this.handleFNameChange(e) }} />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"formHorizontalLName\">\n                        <Form.Label column sm={2}>\n                            Last Name\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control type=\"text\" placeholder=\"Last Name\"\n                                value={this.state.lName} onChange={(e: any) => { this.handleLNameChange(e) }} />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"formHorizontalSchool\">\n                        <Form.Label column sm={2}>\n                            School\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control type=\"text\" placeholder=\"School Name\"\n                                value={this.state.schoolName} onChange={(e: any) => { this.handleSchoolChange(e) }} />\n                        </Col>\n                    </Form.Group>\n                    {/* {this.state.studentOrManager ? null :\n                        <Form.Group as={Row} controlId=\"formHorizontalStudentID\">\n                            <Form.Label column sm={2}>\n                                Student ID\n                        </Form.Label>\n                            <Col sm={10}>\n                                <Form.Control type=\"text\" placeholder=\"Student ID\"\n                                    value={this.state.studentID} onChange={(e: any) => { this.handleStudentIDChange(e) }} />\n                            </Col>\n                        </Form.Group>\n\n                    } */}\n                    <Form.Group as={Row}>\n                        <Col>\n                            <div>\n                                <Button variant='success'>\n                                    <Link to='/' style={{ color: 'white', textDecoration: 'none' }}>Sign in page</Link>\n                                </Button>\n                                {this.state.userEmail && this.state.password && this.state.schoolName?\n                                    <Button onClick={() => { this.signUp(this.state.userEmail, this.state.password) }}\n                                        style={{ marginLeft: 100 }}>\n                                        <Link to='/' style={{ color: 'white', textDecoration: 'none' }}>Sign up</Link></Button>\n                                    :\n                                    <Button type=\"submit\" disabled\n                                        style={{ marginLeft: 100 }}> Sign up</Button>\n                                }\n                            </div>\n                        </Col>\n                    </Form.Group>\n                </Form>\n            </div>\n        );\n    }\n}\nexport default Signup;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport firebase from '../firebase/firebase';\nimport { Button, Row, Col, Navbar, Nav, NavDropdown, Form } from 'react-bootstrap';\nimport _ from 'lodash';\n\ninterface Props {\n    history: any,\n}\ninterface State {\n    userID: string,\n    userSchoolName: string,\n    schoolCode: string,\n    classInfo: any,\n    byTime: boolean,\n    byRoom: boolean,\n    setDay: string,\n    setMonth: string,\n    setYear: string,\n    setHour: string,\n    setMin: string,\n    setDate: string,\n    roomNum: any,\n\n}\n\nconst monthArr = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n    'Oct', 'Nov', 'Dec'];\n\nconst daysArr = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday',\n    'Saturday', 'Sunday',];\n\nclass StudentMain extends React.Component<Props, State> {\n    public state: State;\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            userID: '',\n            userSchoolName: '',\n            schoolCode: '',\n            classInfo: {},\n            byTime: true,\n            byRoom: false,\n            setDay: '',\n            setMonth: '',\n            setYear: '',\n            setHour: '',\n            setMin: '',\n            setDate: '',\n            roomNum: '',\n        }\n    }\n\n    componentDidMount = () => {\n        const current = new Date();\n        const hour = current.getHours();\n        const mins = current.getMinutes();\n        const days = current.getDay();\n        const year = current.getFullYear();\n        const month = current.getMonth();\n        const date = current.getDate();\n        const minArr = mins.toString().split('');\n        if (_.size(minArr) < 2) {\n            minArr.unshift('0');\n        }\n\n        console.log(year + ',' + month + ',' + date);\n\n        this.setState({\n            setHour: parseInt(minArr[1]) >= 5 ? minArr[0] !== '5' ?\n                hour.toString() : (hour + 1).toString() : hour.toString(), setYear: year.toString(),\n            setDay: daysArr[days - 1], setMonth: monthArr[month], setDate: date.toString(),\n            setMin: parseInt(minArr[1]) >= 5 ? minArr[0] !== '5' ? (parseInt(minArr[0]) + 1).toString() + '0' : '00'\n                : minArr[0] + '0'\n        });\n        firebase.auth().onAuthStateChanged((user) => {\n            if (user) {\n                firebase.firestore().collection('users').doc(user.uid).onSnapshot((info) => {\n                    // this.setState({ userInfo: info.data() })\n                    const userInfo = info.data();\n                    if (userInfo) {\n\n                        this.setState({ userID: user.uid });\n                        this.setState({ userSchoolName: userInfo.schoolName });\n\n                        firebase.firestore().collection('classes').onSnapshot((result) => {\n                            _.each(result.docs, (data) => {\n                                const name = data.data().name;\n                                const userSchoolName = this.state.userSchoolName;\n                                if (name === userSchoolName) {\n                                    this.setState({ schoolCode: data.id });\n                                }\n                            })\n                        });\n                        // const classArr: any = [];\n                        // firebase.firestore().collection(this.state.userSchoolName).onSnapshot((result) => {\n                        //     _.each(result.docs, (data) => {\n                        //         classArr.push(data.data());\n                        //     })\n                        // });\n                        // this.setState({ classInfo: classArr });\n                    }\n                });\n            } else {\n                this.props.history.push('/');\n            }\n        });\n    }\n\n    private handleChange = (e: any) => {\n        switch (e.target.name) {\n            case 'setDate':\n                this.setState({ setDate: e.target.value });\n                return;\n            case 'setMonth':\n                this.setState({ setMonth: e.target.value });\n                return;\n            case 'setYear':\n                this.setState({ setYear: e.target.value });\n                return;\n            case 'setHour':\n                this.setState({ setHour: e.target.value });\n                return;\n            case 'setMin':\n                this.setState({ setMin: e.target.value });\n                return;\n            case 'setRoom':\n                this.setState({ roomNum: e.target.value });\n                return;\n\n        }\n    }\n\n    private signOut = () => {\n        firebase.auth().signOut().then((user) => {\n            console.log(user);\n            console.log('Logged out');\n            this.props.history.push('/');\n        }).catch((error) => {\n            console.log(error);\n        })\n    }\n\n    private renderNow = () => {\n        const now = new Date();\n        console.log('day' + now.getDate());\n        console.log('year' + now.getFullYear());\n        console.log('mon' + now.getMonth());\n        console.log('hour' + now.getHours());\n        console.log('min' + now.getMinutes());\n    }\n\n    render() {\n        // console.log(monthArr[month] + '/' + date + '/' + year + '/' + hour + '/' + mins + '/' + daysArr[days - 1]);\n        return (\n            <div>\n                <div style={{ width: '100%', background: '#f8f9fa' }}>\n                    <Navbar bg=\"light\" expand='sm' style={{ width: '80%', margin: 'auto', }}>\n                        <Navbar.Brand href=\"/studentMain\">Empty Room Finder</Navbar.Brand>\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\n                            <Nav className=\"mr-auto\">\n                                {/* <Nav.Link href=\"#home\">Home</Nav.Link>\n                                <Nav.Link href=\"#link\">Link</Nav.Link> */}\n                                {/* <NavDropdown title=\"Search Option\" id=\"basic-nav-dropdown\"> */}\n                                <NavDropdown.Item style={{\n                                    background: this.state.byTime ? '#007bff' : '#ffffff00',\n                                    color: this.state.byTime ? 'white' : 'black', borderRadius: 5\n                                }}\n                                    onSelect={() => { this.setState({ byTime: true }); this.setState({ byRoom: false }) }}>\n                                    By Time</NavDropdown.Item>\n                                <NavDropdown.Item style={{ borderRadius: 5 }}\n                                    onSelect={() => { this.setState({ byTime: false }); this.setState({ byRoom: true }) }}>\n                                    By Room</NavDropdown.Item>\n                                {/* <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item> */}\n                                {/* <NavDropdown.Divider />\n                                    <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item> */}\n                                {/* </NavDropdown> */}\n                            </Nav>\n                            <h6 id='signOutBtn' style={{\n                                border: '1px solid', width: 110, height: 40,\n                                lineHeight: '35px', marginTop: 10, cursor: 'pointer', borderRadius: 5, textAlign: 'center'\n                            }} onClick={() => this.signOut()}>Sign out</h6>\n                        </Navbar.Collapse>\n                    </Navbar>\n                </div>\n\n                <div style={{ width: '80%', margin: 'auto', marginTop: 20 }}>\n                    <Form>\n                        {this.state.byTime ?\n                            <Form.Group as={Col} controlId=\"formGridEmail\">\n                                <Form.Label >Time (Default is now)</Form.Label>\n                                <Form.Group>\n                                    <Form.Row>\n                                        <Form.Group as={Col} md='auto' controlId=\"formGridCity\">\n                                            <Form.Control as=\"select\" name='setMonth' value={this.state.setMonth}\n                                                onChange={(e: any) => { this.handleChange(e) }}>\n                                                <option>Jan</option>\n                                                <option>Feb</option>\n                                                <option>Mar</option>\n                                                <option>Apr</option>\n                                                <option>May</option>\n                                                <option>Jun</option>\n                                                <option>Jul</option>\n                                                <option>Aug</option>\n                                                <option>Sep</option>\n                                                <option>Oct</option>\n                                                <option>Nov</option>\n                                                <option>Dec</option>\n                                            </Form.Control>\n                                        </Form.Group>\n\n                                        <Form.Group as={Col} md='auto' controlId=\"formGridState\">\n                                            <Form.Control as=\"select\" name='setDate' value={this.state.setDate}\n                                                onChange={(e: any) => { this.handleChange(e) }}>\n                                                <option>1</option>\n                                                <option>2</option>\n                                                <option>3</option>\n                                                <option>4</option>\n                                                <option>5</option>\n                                                <option>6</option>\n                                                <option>7</option>\n                                                <option>8</option>\n                                                <option>9</option>\n                                                <option>10</option>\n                                                <option>11</option>\n                                                <option>12</option>\n                                                <option>13</option>\n                                                <option>14</option>\n                                                <option>15</option>\n                                                <option>16</option>\n                                                <option>17</option>\n                                                <option>18</option>\n                                                <option>19</option>\n                                                <option>20</option>\n                                                <option>21</option>\n                                                <option>22</option>\n                                                <option>23</option>\n                                                <option>24</option>\n                                                <option>25</option>\n                                                <option>26</option>\n                                                <option>27</option>\n                                                <option>28</option>\n                                                <option>29</option>\n                                                <option>30</option>\n                                                <option>31</option>\n                                            </Form.Control>\n                                        </Form.Group>\n\n                                        <Form.Group as={Col} md='auto' controlId=\"formGridZip\">\n                                            <Form.Control as=\"select\" name='setYear' value={this.state.setYear}\n                                                onChange={(e: any) => { this.handleChange(e) }}>\n                                                <option>2019</option>\n                                                <option>2020</option>\n                                            </Form.Control>\n                                        </Form.Group>\n                                    </Form.Row>\n                                    {\n                                        window.innerWidth < 800 ?\n                                            < Form.Label > Hour</Form.Label> : null\n                                    }\n                                    <Form.Row>\n                                        <Form.Group as={Col} md='auto' controlId=\"formGridCity\">\n                                            <Form.Control as=\"select\" name='setHour' value={this.state.setHour}\n                                                onChange={(e: any) => { this.handleChange(e) }}>\n                                                <option>1</option>\n                                                <option>2</option>\n                                                <option>3</option>\n                                                <option>4</option>\n                                                <option>5</option>\n                                                <option>6</option>\n                                                <option>7</option>\n                                                <option>8</option>\n                                                <option>9</option>\n                                                <option>10</option>\n                                                <option>11</option>\n                                                <option>12</option>\n                                                <option>13</option>\n                                                <option>14</option>\n                                                <option>15</option>\n                                                <option>16</option>\n                                                <option>17</option>\n                                                <option>18</option>\n                                                <option>19</option>\n                                                <option>20</option>\n                                                <option>21</option>\n                                                <option>22</option>\n                                                <option>23</option>\n                                                <option>24</option>\n                                            </Form.Control>\n                                        </Form.Group>\n                                        <Form.Label column md='auto'>\n                                            {window.innerWidth < 800 ? 'Minutes' : ':'}\n                                        </Form.Label>\n                                        <Form.Group as={Col} md='auto' controlId=\"formGridState\">\n                                            <Form.Control as=\"select\" name='setMin' value={this.state.setMin}\n                                                onChange={(e: any) => { this.handleChange(e) }}>\n                                                <option>00</option>\n                                                <option>10</option>\n                                                <option>20</option>\n                                                <option>30</option>\n                                                <option>40</option>\n                                                <option>50</option>\n                                                {console.log(this.state.setMin)}\n                                            </Form.Control>\n                                        </Form.Group>\n                                    </Form.Row>\n                                </Form.Group>\n                                <Link to={'/SearchResult/' + this.state.userSchoolName + '/' + this.state.setMonth + '/' +\n                                    this.state.setDate + '/' + this.state.setYear + '/' + this.state.setHour + '/' + this.state.setMin}\n                                    style={{ textDecoration: 'none', color: 'white' }}>\n                                    {this.state.userSchoolName ?\n                                        <Button variant=\"primary\" onClick={() => { console.log(this.state.setMin) }}>\n                                            Submit\n                                    </Button>\n                                        :\n                                        <Button variant=\"primary\" disabled>\n                                            Submit\n                                    </Button>\n                                    }\n                                </Link>\n                            </Form.Group>\n                            :\n                            <Form.Group as={Col} controlId=\"formGridEmail\">\n                                <Row>\n\n                                    {/* <Form.Label style={{ float: 'left' }}>Search a class room schedule</Form.Label> */}\n                                    <Form.Label style={{}}>Search a class room schedule</Form.Label>\n                                </Row>\n                                <Form.Group>\n                                    <Form.Row>\n                                        <Form.Group as={Col} md='auto' controlId=\"formGridCity\">\n                                            <Form.Control as=\"select\" name='setMonth' value={this.state.setMonth}\n                                                onChange={(e: any) => { this.handleChange(e) }}>\n                                                <option>Jan</option>\n                                                <option>Feb</option>\n                                                <option>Mar</option>\n                                                <option>Apr</option>\n                                                <option>May</option>\n                                                <option>Jun</option>\n                                                <option>Jul</option>\n                                                <option>Aug</option>\n                                                <option>Sep</option>\n                                                <option>Oct</option>\n                                                <option>Nov</option>\n                                                <option>Dec</option>\n                                            </Form.Control>\n                                        </Form.Group>\n\n                                        <Form.Group as={Col} md='auto' controlId=\"formGridState\">\n                                            <Form.Control as=\"select\" name='setDate' value={this.state.setDate}\n                                                onChange={(e: any) => { this.handleChange(e) }}>\n                                                <option>1</option>\n                                                <option>2</option>\n                                                <option>3</option>\n                                                <option>4</option>\n                                                <option>5</option>\n                                                <option>6</option>\n                                                <option>7</option>\n                                                <option>8</option>\n                                                <option>9</option>\n                                                <option>10</option>\n                                                <option>11</option>\n                                                <option>12</option>\n                                                <option>13</option>\n                                                <option>14</option>\n                                                <option>15</option>\n                                                <option>16</option>\n                                                <option>17</option>\n                                                <option>18</option>\n                                                <option>19</option>\n                                                <option>20</option>\n                                                <option>21</option>\n                                                <option>22</option>\n                                                <option>23</option>\n                                                <option>24</option>\n                                                <option>25</option>\n                                                <option>26</option>\n                                                <option>27</option>\n                                                <option>28</option>\n                                                <option>29</option>\n                                                <option>30</option>\n                                                <option>31</option>\n                                            </Form.Control>\n                                        </Form.Group>\n\n                                        <Form.Group as={Col} md='auto' controlId=\"formGridZip\">\n                                            <Form.Control as=\"select\" name='setYear' value={this.state.setYear}\n                                                onChange={(e: any) => { this.handleChange(e) }}>\n                                                <option>2019</option>\n                                                <option>2020</option>\n                                            </Form.Control>\n                                        </Form.Group>\n                                    </Form.Row>\n\n                                </Form.Group>\n                                {\n                                    window.innerWidth < 800 ?\n                                        <Form.Control type=\"text\" placeholder=\"Enter Room Number\" name='setRoom'\n                                            onChange={(e: any) => { this.handleChange(e) }}\n                                            style={{ width: '100%', float: 'left', marginBottom: 10 }} />\n                                        :\n                                        <Form.Control type=\"text\" placeholder=\"Enter Room Number\" name='setRoom'\n                                            onChange={(e: any) => { this.handleChange(e) }}\n                                            style={{ width: '40%', float: 'left', margin: '0 10px' }} />\n                                }\n\n\n                                {this.state.roomNum ?\n                                    <Link to={'/SearchResult/' + this.state.userSchoolName + '/' + this.state.setMonth + '/' +\n                                        this.state.setDate + '/' + this.state.setYear + '/' + this.state.roomNum\n                                    }\n                                        style={{ textDecoration: 'none', color: 'white' }}>\n                                        <Button variant=\"primary\" onClick={() => { console.log(this.state.roomNum) }}>\n                                            Submit\n                                        </Button>\n                                    </Link>\n                                    :\n                                    <Button variant=\"primary\" disabled>\n                                        Submit\n                                </Button>}\n\n                            </Form.Group>\n                        }\n                    </Form>\n                </div>\n            </div>\n        );\n    }\n}\nexport default StudentMain;","import React from 'react';\nimport firebase from '../firebase/firebase';\nimport { Navbar, Nav, NavDropdown, Form } from 'react-bootstrap';\nimport _ from 'lodash';\n\ninterface Props {\n    history: any,\n}\ninterface State {\n    searchInfo: any,\n    userSchoolName: string,\n    classInfo: any,\n    byRoom: boolean,\n    selectedHour: string,\n    selectedMin: string,\n}\nconst monthArr = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n    'Oct', 'Nov', 'Dec'];\n\nconst daysArr = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday',\n    'Saturday',];\n\nclass SearchResult extends React.Component<Props, State> {\n    public state: State;\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            classInfo: [],\n            searchInfo: [],\n            userSchoolName: '',\n            byRoom: false,\n            selectedHour: '',\n            selectedMin: '',\n\n        }\n    }\n\n    componentDidMount() {\n        const classArr: any = [];\n        const url = this.props.history.location.pathname.split('/')\n        console.log(url);\n\n        const monthIndex = monthArr.indexOf(url[3]);\n        console.log(monthIndex);\n        let semester = '';\n        if (monthIndex < 4) {\n            semester = 'Winter ' + url[5];\n        } else if (monthIndex >= 4 && monthIndex <= 7) {\n            semester = 'Summer ' + url[5];\n        } else {\n            semester = 'Fall ' + url[5];\n        }\n        const selectedDay = new Date(url[5], monthIndex, url[4]);\n        const setDay = selectedDay.getDay();\n        if (url.length === 8) {\n            console.log(semester);\n            firebase.firestore().collection(url[2]).where('term', '==', semester).get().then((result) => {\n                _.each(result.docs, (data) => {\n                    const classData = data.data();\n                    // classArr.push(classData)\n                    console.log(classData);\n                    if (classData.day === daysArr[setDay]) {\n                        classArr.push(classData)\n                    }\n                })\n                const sortedArr = _.orderBy(classArr, ['startHour'], ['desc']);\n                this.setState({ classInfo: sortedArr, selectedHour: url[6], selectedMin: url[7] });\n            }).catch((e) => {\n                console.log(e);\n            });\n        } else if (url.length === 7) {\n            firebase.firestore().collection(url[2]).where('room', '==', url[6].toUpperCase())\n                .get().then((result) => {\n                    _.each(result.docs, (data) => {\n                        const classData = data.data();\n                        // classArr.push(classData)\n                        if (classData.day === daysArr[setDay]) {\n                            classArr.push(classData)\n                        }\n                    })\n                    const sortedArr = _.orderBy(classArr, ['startHour'], ['asc']);\n                    this.setState({ classInfo: sortedArr, byRoom: true });\n                }).catch((e) => {\n                    console.log(e);\n                });\n        }\n\n\n        this.setState({ searchInfo: url });\n        firebase.auth().onAuthStateChanged((user) => {\n            if (!user) {\n                this.props.history.push('/');\n            }\n        });\n    }\n\n    private signOut = () => {\n        firebase.auth().signOut().then((user) => {\n            console.log(user);\n            console.log('Logged out');\n            this.props.history.push('/');\n        }).catch((error) => {\n            console.log(error);\n        })\n    }\n\n    private renderResult = () => {\n        const classInfo: any = [];\n        // const current = new Date();\n        const currentHour = this.state.selectedHour;\n        const currentMin = this.state.selectedMin;\n        // const currentHour = 13;\n        console.log(parseInt(currentHour) + 3)\n        if (this.state.byRoom) {\n            if (_.size(this.state.classInfo) === 0) {\n                classInfo.push(\n                    <div key={'noClass'} style={{\n                        border: '1px solid black', width: '70%',\n                        margin: 'auto', marginBottom: 20, padding: 10, borderRadius: 10\n                    }}>\n                        <Form.Label>Class room does not exist or there is no class</Form.Label>\n                    </div>\n                )\n            } else {\n                _.each(this.state.classInfo, (data) => {\n                    classInfo.push(\n                        <div key={data.classCode} style={{\n                            border: '1px solid black', width: '70%',\n                            margin: 'auto', marginBottom: 20, padding: 10, borderRadius: 10\n                        }}>\n                            <Form.Label>{data.room}</Form.Label><br></br>\n                            {'Class time :' + data.startHour + ':' + data.startMin + ' ~ ' +\n                                data.endHour + ':' + data.endMin + ', ' + data.subject + ', ' + data.title}\n                        </div>\n                    )\n                })\n            }\n        } else {\n            if (_.size(this.state.classInfo) === 0) {\n                classInfo.push(\n                    <div key={'noClass'} style={{\n                        border: '1px solid black', width: '70%',\n                        margin: 'auto', marginBottom: 20, padding: 10, borderRadius: 10\n                    }}>\n                        <Form.Label>Every classroom is free to study</Form.Label>\n                    </div>\n                )\n            } else {\n                _.each(this.state.classInfo, (data) => {\n                    if (parseInt(data.startHour) <= parseInt(currentHour) &&\n                        parseInt(data.endHour) >= parseInt(currentHour)) {\n                        classInfo.push(\n                            <div key={data.classCode} style={{\n                                border: '2px solid #007bff', width: '70%',\n                                margin: 'auto', marginBottom: 20, padding: 10, borderRadius: 10\n                            }}>\n                                <Form.Label>Class Info</Form.Label><br></br>\n                                {data.room + ' : ' + data.subject + ', ' + data.title + ' Ends at ' +\n                                    data.endHour + ':' + data.endMin + ' '}\n                            </div>\n                        );\n                    } else if (parseInt(currentHour) + 3 >= parseInt(data.startHour) &&\n                        parseInt(currentHour) <= parseInt(data.startHour)) {\n                        classInfo.push(\n                            <div key={data.classCode} style={{\n                                border: '1px solid black', width: '70%',\n                                margin: 'auto', marginBottom: 20, padding: 10, borderRadius: 10\n                            }}>\n                                <Form.Label>Class Info</Form.Label><br></br>\n                                {data.room + ' : ' + data.subject + ', ' + data.title + ' Starts at ' +\n                                    data.startHour + ':' + data.startMin + ' '}\n                            </div>\n                        );\n                    }\n                })\n            }\n        }\n        return classInfo\n    }\n\n    render() {\n        return (\n            <div>\n                <div>\n                    <Navbar bg=\"light\" expand='sm' style={{ width: '80%', margin: 'auto', }}>\n                        <Navbar.Brand href=\"/studentMain\">Empty Room Finder</Navbar.Brand>\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\n                            <Nav className=\"mr-auto\">\n                                <NavDropdown.Item href=\"/studentMain\">\n                                    Return to Search</NavDropdown.Item>\n                            </Nav>\n                            <h6 id='signOutBtn' style={{\n                                border: '1px solid', width: 110, height: 40,\n                                lineHeight: '35px', marginTop: 10, cursor: 'pointer', borderRadius: 5, textAlign: 'center'\n                            }} onClick={() => this.signOut()}>Sign out</h6>\n                        </Navbar.Collapse>\n                    </Navbar>\n                </div>\n                <div style={{ width: '80%', margin: 'auto', marginTop: 20 }}>\n                    {this.renderResult()}\n                </div>\n            </div>\n        );\n    }\n}\nexport default SearchResult;","import React from 'react';\nimport Login from './screens/Login';\nimport ManagerMain from './screens/ManagerMain';\nimport Signup from './screens/Signup';\nimport StudentMain from './screens/StudentMain';\nimport SearchResult from './screens/SearchResult';\nimport { BrowserRouter as Router, Route, } from 'react-router-dom';\n\ninterface Props {\n}\n\nclass AppRouter extends React.Component<Props> {\n\n    render() {\n        return (\n            <Router>\n                <div style={{ height: \"100vh\", overflow: 'auto' }}>\n                    <Route exact path=\"/\" component={Login} />\n                    <Route path=\"/managerMain\" component={ManagerMain} />\n                    <Route path=\"/signup\" component={Signup} />\n                    <Route path=\"/studentMain\" component={StudentMain} />\n                    <Route path=\"/SearchResult\" component={SearchResult} />\n                    {/* <Route path=\"/manageclasses\" component={ManageClasses} /> */}\n                </div>\n            </Router>\n        )\n    }\n}\n\nexport default AppRouter;\n","import React, { Component } from 'react';\nimport AppRouter from './AppRouter';\n\ninterface Props {\n\n}\n\nclass App extends Component<Props> {\n\n  render() {\n    return (\n      <AppRouter />\n    );\n\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
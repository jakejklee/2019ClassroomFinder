{"version":3,"sources":["firebase/firebase.tsx","screens/Login.tsx","screens/ManageClasses.tsx","components/ClassModal.tsx","screens/ManagerMain.tsx","screens/Signup.tsx","screens/StudentMain.tsx","AppRouter.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","componentDidMount","auth","onAuthStateChanged","user","firestore","collection","doc","uid","onSnapshot","info","userInfo","data","isManager","history","push","userSignin","email","password","signInWithEmailAndPassword","then","result","console","log","catch","error","emailAddress","e","setState","target","value","_this2","react_default","a","createElement","id","style","width","textAlign","margin","border","borderRadius","padding","marginLeft","autoComplete","type","name","placeholder","required","onChange","handleEmailChange","handlePWChange","Button","variant","marginRight","onClick","react_router_dom","to","textDecoration","color","React","Component","ManageClasses","currentTime","Date","ClassModal","handleChange","classTerm","classCode","subject","title","startDate","endDate","days","time","campus","room","classInfo","renderTerm","getFullYear","getMonth","Form","Control","as","selected","addClass","timeNow","modalInfo","schoolCode","addingClasses","split","eachInfo","classDetail","_","each","classData","detail","add","createdAt","day","modalHide","undefined","modalData","modalType","Modal","show","modalOpen","onHide","centered","Header","closeButton","Title","schoolName","Body","Group","Row","Col","Check","label","defaultChecked","controlId","Label","rows","marginTop","column","sm","Footer","size","disabled","Spinner","animation","ManagerMain","isConfirmed","userID","userSchoolName","docs","signOut","clickBtn","classModal","editClassModal","height","lineHeight","cursor","marginBottom","md","fontWeight","btnFontWeight","fontSize","btnFontSize","components_ClassModal","Signup","signUp","createUserWithEmailAndPassword","studentOrManager","set","userEmail","firstName","fName","lastName","lName","studentID","handleFNameChange","handleLNameChange","handleSchoolChange","handleStudentIDChange","StudentMain","renderData","AppRouter","overflow","react_router","exact","path","component","App","src_AppRouter","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bba4b813.chunk.js","sourcesContent":["import firebase from 'firebase';\n\n// Initialize Firebase\nvar config = {\n    apiKey: \"AIzaSyBMPXUl2PERXrbAUtPujHj04Yllk46xfRg\",\n    authDomain: \"csis-4495.firebaseapp.com\",\n    databaseURL: \"https://csis-4495.firebaseio.com\",\n    projectId: \"csis-4495\",\n    storageBucket: \"csis-4495.appspot.com\",\n    messagingSenderId: \"652993270371\",\n    appId: \"1:652993270371:web:979f7522b83bc351\"\n};\nfirebase.initializeApp(config);\n\nexport default firebase;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport firebase from '../firebase/firebase';\n\ninterface Props {\n    history: any,\n}\ninterface State {\n    emailAddress: string,\n    password: string,\n}\n\nclass Login extends React.Component<Props, State> {\n    public state: State;\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            emailAddress: '',\n            password: '',\n            \n        }\n    }\n\n    componentDidMount = () => {\n        firebase.auth().onAuthStateChanged((user) => {\n            if (user) {\n                firebase.firestore().collection('users').doc(user.uid).onSnapshot((info) => {\n                    // this.setState({ userInfo: info.data() })\n                    const userInfo = info.data();\n                    if (userInfo){\n                        if(userInfo.isManager){\n                            this.props.history.push('/managerMain');\n                        }else{\n                            this.props.history.push('/studentMain');\n                        }\n                    }\n                });\n            }\n\n        });\n    }\n\n    private userSignin = (email: any, password: any) => {\n        firebase.auth().signInWithEmailAndPassword(email, password).then((result) => {\n            console.log(result);\n            if (result.user) {\n                firebase.firestore().collection('users').doc(result.user.uid).onSnapshot((info) => {\n                    const userInfo = info.data();\n                    if (userInfo){\n                        if(userInfo.isManager){\n                            this.props.history.push('/managerMain');\n                        }else{\n                            this.props.history.push('/studentMain');\n                        }\n                    }\n                })\n            }\n        }).catch(function (error: any) {\n            console.log(error);\n        });\n    }\n\n    private handleEmailChange(e: any) {\n        this.setState({ emailAddress: e.target.value });\n    }\n    private handlePWChange(e: any) {\n        this.setState({ password: e.target.value });\n    }\n\n    render() {\n        // this.checkUser();\n        return (\n            <div id=\"mainDiv\" style={{ width: '100%', textAlign: 'center' }}>\n                <br></br><br></br>\n                <h1>Login</h1><br></br><br></br>\n\n                <div id='formDiv' style={{\n                    margin: 'auto',\n                    width: '50%',\n                    border: '1px solid',\n                    borderRadius: 10,\n                    padding: 10.\n                }}>\n                    <form>\n                        <h3 style={{ textAlign: 'left', marginLeft: '5%' }}>Email</h3>\n                        <input style={{ width: '90%' }}\n                            id=\"inputEmail\"\n                            autoComplete=\"off\"\n                            // onFocus={() => { this.renderErrorMsg() }}\n                            type=\"email\"\n                            value={this.state.emailAddress}\n                            name=\"email\"\n                            placeholder=\" example@example.com\"\n                            required\n                            onChange={(e) => { this.handleEmailChange(e) }}\n                        /><br></br><br></br>\n                        <h3 style={{ textAlign: 'left', marginLeft: '5%' }}>Password</h3>\n                        <input style={{ width: '90%' }}\n                            id=\"inputPassword\"\n                            autoComplete=\"off\"\n                            placeholder=\" At least 6 characters\"\n                            type=\"password\"\n                            value={this.state.password}\n                            name=\"password\"\n                            required\n                            onChange={(e) => { this.handlePWChange(e) }}\n                        />\n\n\n                        <br></br><br></br>\n                        {/* <h6>If you do not have an account,</h6>\n                        <h6> click Signup button with email and password you want.</h6> */}\n                        <br></br>\n                        <Button id=\"loginBtn\" variant='primary' style={{ marginRight: 10 }}\n                            onClick={() => this.userSignin(this.state.emailAddress, this.state.password)}>Sign in</Button>\n                        {/* >Sign in</Button> */}\n                        Or\n                        <Button style={{ marginLeft: '10px' }} id=\"signupBtn\" variant='success'\n                        // onClick={() => this.userSignup(this.state.emailAddress, this.state.password)}>Signup</Button>\n                        ><Link to='/signup' style={{ textDecoration: 'none', color: 'white' }}> Sign up</Link></Button>\n                        <br></br><br></br>\n                        {/* <h5 style={{ color: 'red' }}>{this.state.errorMsg}</h5> */}\n                    </form>\n                </div>\n                {/* <div id=\"recaptcha-container\"></div> */}\n\n            </div >\n\n        );\n    }\n}\nexport default Login;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\ninterface Props {\n}\ninterface State {\n}\n\nclass ManageClasses extends React.Component<Props, State> {\n    public state: State;\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>manageclasses</h1>\n                <Link to='/managerMain'>managerMain</Link>\n                <Link to='/manageclasses'>manageclasses</Link>\n                <Link to='/signup'>signup</Link>\n                <Link to='/studentMain'>studentMain</Link>\n                <Link to='/'>Login</Link>\n            </div>\n        );\n    }\n}\nexport default ManageClasses;","import React from 'react';\nimport { Modal, Spinner, Button, Form, Col, Row } from 'react-bootstrap';\nimport firebase from '../firebase/firebase';\nimport _ from 'lodash';\ninterface Props {\n    modalInfo: any,\n}\ninterface State {\n    classTerm: string,\n    classCode: string,\n    subject: string,\n    title: string,\n    startDate: string,\n    endDate: string,\n    days: string,\n    time: string,\n    campus: string,\n    room: string,\n    addingClasses: boolean,\n    classInfo: any,\n}\nconst currentTime = new Date();\nclass ClassModal extends React.Component<Props, State> {\n    public state: State;\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            classTerm: 'Fall 2019',\n            classCode: '',\n            subject: '',\n            title: '',\n            startDate: '',\n            endDate: '',\n            days: '',\n            time: '',\n            campus: '',\n            room: '',\n            addingClasses: false,\n            classInfo: undefined,\n            // schoolCode: '',\n            // title: '',\n            // Term:'',\n        }\n    }\n\n    private handleChange = (e: any) => {\n        switch (e.target.name) {\n            case 'term':\n                this.setState({ classTerm: e.target.value });\n                return;\n            case 'classCode':\n                this.setState({ classCode: e.target.value });\n                return;\n            case 'subject':\n                this.setState({ subject: e.target.value });\n                return;\n            case 'title':\n                this.setState({ title: e.target.value });\n                return;\n            case 'startDate':\n                this.setState({ startDate: e.target.value });\n                return;\n            case 'endDate':\n                this.setState({ endDate: e.target.value });\n                return;\n            case 'days':\n                this.setState({ days: e.target.value });\n                return;\n            case 'time':\n                this.setState({ time: e.target.value });\n                return;\n            case 'campus':\n                this.setState({ campus: e.target.value });\n                return;\n            case 'room':\n                this.setState({ room: e.target.value });\n                return;\n            case 'classInfo':\n                this.setState({ classInfo: e.target.value });\n                return;\n        }\n    }\n\n    private renderTerm = () => {\n        let defaultTerm;\n        console.log(currentTime.getFullYear())\n        if (currentTime.getMonth() <= 3) {\n            defaultTerm =\n                <Form.Control as=\"select\" name='term' onChange={(e: any) => { this.handleChange(e) }}>\n                    <option selected>Summer 2019</option>\n                    <option>Fall 2019</option>\n                    <option>Winter 2020</option>\n                </Form.Control>\n            return defaultTerm;\n        } else if (currentTime.getMonth() <= 7 && currentTime.getMonth() >= 4) {\n            defaultTerm =\n                <Form.Control as=\"select\" name='term' onChange={(e: any) => { this.handleChange(e) }}>\n                    <option >Summer 2019</option>\n                    <option selected>Fall 2019</option>\n                    <option>Winter 2020</option>\n                </Form.Control>\n            return defaultTerm;\n        } else if (currentTime.getMonth() <= 11 && currentTime.getMonth() >= 8) {\n            defaultTerm =\n                <Form.Control as=\"select\" name='term' onChange={(e: any) => { this.handleChange(e) }}>\n                    <option>Summer 2019</option>\n                    <option>Fall 2019</option>\n                    <option selected>Winter 2020</option>\n                </Form.Control>\n            return defaultTerm;\n        }\n    }\n\n    private addClass = () => {\n        const timeNow = new Date();\n        console.log(this.props.modalInfo.schoolCode);\n        const schoolCode = this.props.modalInfo.schoolCode;\n\n        if (this.state.addingClasses) {\n            const classInfo = this.state.classInfo.split('/');\n            let eachInfo: any = [];\n            let classDetail: any = [];\n            _.each(classInfo, (each) => {\n                eachInfo.push(each.split(','));\n            })\n            _.each(eachInfo, (classData) => {\n                _.each(classData, (detail) => {\n                    classDetail.push(detail.split(':'));\n                })\n                // classDetail.push(classData.split(':'));\n            })\n\n            console.log(eachInfo);\n            console.log(classDetail);\n            _.each(this.state.classInfo, (info) => {\n                // console.log(info);\n\n            })\n        } else {\n            firebase.firestore().collection('classes').doc(schoolCode).collection(this.state.classTerm)\n                .add(\n                    {\n                        createdAt: timeNow,\n                        classCode: this.state.classCode,\n                        subject: this.state.subject,\n                        title: this.state.title,\n                        startDate: this.state.startDate,\n                        endDate: this.state.endDate,\n                        day: this.state.days,\n                        time: this.state.time,\n                        campus: this.state.campus,\n                        room: this.state.room,\n                    }\n                ).then((result) => {\n                    console.log(result);\n                    this.setState({ campus: '' });\n                    this.setState({ classCode: '' });\n                    this.setState({ subject: '' });\n                    this.setState({ title: '' });\n                    this.setState({ startDate: '' });\n                    this.setState({ endDate: '' });\n                    this.setState({ days: '' });\n                    this.setState({ time: '' });\n                    this.setState({ room: '' });\n                    this.props.modalInfo.modalHide();\n                });\n        }\n    }\n\n    render() {\n        console.log(this.props);\n        const modalData = this.props.modalInfo;\n        if (modalData.modalType === 'add') {\n            return (\n                <Modal\n                    show={modalData.modalOpen}\n                    onHide={() => modalData.modalHide()}\n                    // size=\"sm\"\n                    centered>\n                    <Modal.Header closeButton>\n                        <Modal.Title id=\"contained-modal-title-vcenter\" style={{ textAlign: 'center' }}>\n                            {modalData.schoolName}\n                        </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body style={{ textAlign: 'center' }}>\n                        <fieldset>\n                            <Form.Group>\n                                <Row>\n                                    <Col>\n                                        <Form.Check\n                                            type=\"radio\"\n                                            label=\"Adding a class\"\n                                            name=\"formHorizontalRadios\"\n                                            id=\"formHorizontalRadios1\"\n                                            onChange={() => { this.setState({ addingClasses: false }) }}\n                                            defaultChecked\n                                        />\n                                    </Col>\n                                    <Col>\n                                        <Form.Check\n                                            type=\"radio\"\n                                            label=\"Adding classes\"\n                                            name=\"formHorizontalRadios\"\n                                            id=\"formHorizontalRadios2\"\n                                            onChange={() => { this.setState({ addingClasses: true }) }}\n                                        />\n                                    </Col>\n                                </Row>\n                            </Form.Group>\n                        </fieldset>\n                        {this.state.addingClasses ?\n                            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                                <Form.Label>Enter Class Information</Form.Label>\n                                <Form.Control as=\"textarea\" rows=\"20\" name=\"classInfo\" value={this.state.classInfo}\n                                    onChange={(e: any) => { this.handleChange(e) }}\n                                    placeholder='classCode: 123456,subject: CSIS-1234,title: Database,startDate: 2019-09-03,endDate: 2019-12-20,day: Monday,time: 11:30-14:20,campus: New Westminster,room: N5111 / classCode: 123455,subject: CSIS-1233,title: Web programming,startDate: 2019-09-03,endDate: 2019-12-20,day: Tuesday,time: 11:30-14:20,campus: New Westminster,room: N5111 / classCode: 123454,subject: CSIS-1232,title: Applied Research,startDate: 2019-09-03,endDate: 2019-12-20,day: Wednesday,time: 12:30-15:20,campus: New Westminster,room: N6109' />\n                            </Form.Group>\n                            :\n                            <Form style={{ border: '1px solid', padding: 20, borderRadius: 20, marginTop: 20 }}>\n                                <Form.Group as={Row} controlId=\"formHorizontalSchool\">\n                                    <Form.Label column sm={2}>\n                                        Term\n                        </Form.Label>\n                                    <Col sm={10}>\n                                        {this.renderTerm()}\n                                        {/* {currentTime.getMonth() >= 0 && currentTime.getMonth() <= 3 ?\n                                        <Form.Control as=\"select\" name='term' onChange={(e: any) => { this.handleChange(e) }}>\n                                            <option defaultChecked>Summer 2019</option>\n                                            <option>Fall 2019</option>\n                                            <option>Winter 2020</option>\n                                        </Form.Control>\n                                        : null}\n                                    {currentTime.getMonth() >= 4 && currentTime.getMonth() <= 7 ?\n                                        <Form.Control as=\"select\" name='term' onChange={(e: any) => { this.handleChange(e) }}>\n                                            <option>Summer 2019</option>\n                                            <option defaultChecked>Fall 2019</option>\n                                            <option>Winter 2020</option>\n                                        </Form.Control>\n                                        : null}\n                                    {currentTime.getMonth() >= 8 ?\n                                        <Form.Control as=\"select\" name='term' onChange={(e: any) => { this.handleChange(e) }}>\n                                            <option>Summer 2019</option>\n                                            <option>Fall 2019</option>\n                                            <option defaultChecked>Winter 2020</option>\n                                        </Form.Control>\n                                        : null} */}\n                                    </Col>\n                                </Form.Group>\n                                <Form.Group as={Row} controlId=\"formHorizontalCode\">\n                                    <Form.Label column sm={2}>\n                                        Class Code\n                        </Form.Label>\n                                    <Col sm={10}>\n                                        <Form.Control type=\"text\" placeholder=\"Class Code\" name='classCode'\n                                            value={this.state.classCode} onChange={(e: any) => { this.handleChange(e) }} />\n                                    </Col>\n                                </Form.Group>\n\n                                <Form.Group as={Row} controlId=\"formHorizontalSubject\">\n                                    <Form.Label column sm={2}>\n                                        Subject\n                        </Form.Label>\n                                    <Col sm={10}>\n                                        <Form.Control type=\"text\" placeholder=\"Subject\" name='subject'\n                                            value={this.state.subject} onChange={(e: any) => { this.handleChange(e) }} />\n                                    </Col>\n                                </Form.Group>\n                                <Form.Group as={Row} controlId=\"formHorizontalTitle\">\n                                    <Form.Label column sm={2}>\n                                        Title\n                        </Form.Label>\n                                    <Col sm={10}>\n                                        <Form.Control type=\"text\" placeholder=\"Title\" name='title'\n                                            value={this.state.title} onChange={(e: any) => { this.handleChange(e) }} />\n                                    </Col>\n                                </Form.Group>\n                                <Form.Group as={Row} controlId=\"formHorizontalStartDate\">\n                                    <Form.Label column sm={2}>\n                                        Start Date\n                        </Form.Label>\n                                    <Col sm={10}>\n                                        <Form.Control type=\"date\" placeholder=\"Start date\" name='startDate'\n                                            value={this.state.startDate} onChange={(e: any) => { this.handleChange(e) }} />\n                                    </Col>\n                                </Form.Group>\n                                <Form.Group as={Row} controlId=\"formHorizontalEndDate\">\n                                    <Form.Label column sm={2}>\n                                        End Date\n                        </Form.Label>\n                                    <Col sm={10}>\n                                        <Form.Control type=\"date\" placeholder=\"End date\" name='endDate'\n                                            value={this.state.endDate} onChange={(e: any) => { this.handleChange(e) }} />\n                                    </Col>\n                                </Form.Group>\n                                <Form.Group as={Row} controlId=\"formHorizontalDays\">\n                                    <Form.Label column sm={2}>\n                                        Days\n                        </Form.Label>\n                                    <Col sm={10}>\n                                        {/* <Form.Control type=\"text\" placeholder=\"Days\" name='days'\n                                        value={this.state.days} onChange={(e: any) => { this.handleChange(e) }} /> */}\n                                        <Form.Control as=\"select\" name='days'\n                                            onChange={(e: any) => { this.handleChange(e) }}>\n                                            <option selected>Select</option>\n                                            <option>Monday</option>\n                                            <option>Tuesday</option>\n                                            <option>Wednesday</option>\n                                            <option>Thursday</option>\n                                            <option>Friday</option>\n                                            <option>Saturday</option>\n                                            <option>Sunday</option>\n                                        </Form.Control>\n                                    </Col>\n                                </Form.Group>\n                                <Form.Group as={Row} controlId=\"formHorizontalTime\">\n                                    <Form.Label column sm={2}>\n                                        Time\n                        </Form.Label>\n                                    <Col sm={10}>\n                                        <Form.Control type=\"text\" placeholder=\"Time\" name='time'\n                                            value={this.state.time} onChange={(e: any) => { this.handleChange(e) }} />\n                                    </Col>\n                                </Form.Group>\n                                <Form.Group as={Row} controlId=\"formHorizontalCampus\">\n                                    <Form.Label column sm={2}>\n                                        Campus\n                        </Form.Label>\n                                    <Col sm={10}>\n                                        <Form.Control type=\"text\" placeholder=\"Campus\" name='campus'\n                                            value={this.state.campus} onChange={(e: any) => { this.handleChange(e) }} />\n                                    </Col>\n                                </Form.Group>\n                                <Form.Group as={Row} controlId=\"formHorizontalRoom\">\n                                    <Form.Label column sm={2}>\n                                        Room\n                        </Form.Label>\n                                    <Col sm={10}>\n                                        <Form.Control type=\"text\" placeholder=\"Room\" name='room'\n                                            value={this.state.room} onChange={(e: any) => { this.handleChange(e) }} />\n                                    </Col>\n                                </Form.Group>\n                            </Form>\n                        }\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <div>\n                            {_.size(this.state.classInfo) > 0 && this.state.addingClasses ? <Button onClick={() => { this.addClass() }}\n                                style={{ marginLeft: 100 }}>\n                                Add a class</Button> :\n                                this.state.classCode && this.state.subject && this.state.title &&\n                                    this.state.startDate && this.state.endDate && this.state.days && this.state.time &&\n                                    this.state.campus && this.state.room ?\n                                    <Button onClick={() => { this.addClass() }}\n                                        style={{ marginLeft: 100 }}>\n                                        Add a class</Button>\n                                    :\n                                    <Button type=\"submit\" disabled\n                                        style={{ marginLeft: 100 }}> Add a class</Button>\n                            }\n                        </div>\n                    </Modal.Footer>\n                </Modal>\n            );\n        } else if (modalData.modalType === 'edit') {\n            return (\n                <div>\n                    <Modal\n                        show={modalData.modalOpen}\n                        onHide={() => modalData.modalHide()}\n                        size=\"sm\"\n                        centered>\n                        <Modal.Header closeButton>\n                            <Modal.Title id=\"contained-modal-title-vcenter\" style={{ textAlign: 'center' }}>\n                                Edit a class\n                                    </Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body style={{ textAlign: 'center' }}>\n\n                        </Modal.Body>\n                        <Modal.Footer>\n\n                        </Modal.Footer>\n                    </Modal>\n                </div>\n            );\n        } else if (modalData.modalType === 'remove') {\n            return (\n                <div>\n                    <Modal\n                        show={modalData.modalOpen}\n                        onHide={() => modalData.modalHide()}\n                        size=\"sm\"\n                        centered>\n                        <Modal.Header closeButton>\n                            <Modal.Title id=\"contained-modal-title-vcenter\" style={{ textAlign: 'center' }}>\n                                Remove a class\n                                    </Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body style={{ textAlign: 'center' }}>\n\n                        </Modal.Body>\n                        <Modal.Footer>\n\n                        </Modal.Footer>\n                    </Modal>\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    {\n                        modalData.modalOpen ?\n                            <Spinner animation='border'></Spinner>\n                            :\n                            null\n                    }\n                </div>\n            );\n        }\n    }\n}\nexport default ClassModal;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Row, Col } from 'react-bootstrap';\nimport firebase from '../firebase/firebase';\nimport '../css/ManagerMain.css';\nimport ClassModal from '../components/ClassModal';\nimport _ from 'lodash';\n\ninterface Props {\n    history: any,\n}\ninterface State {\n    classModal: boolean,\n    editClassModal: boolean,\n    modalType: string,\n    isConfirmed: boolean,\n    userID: string,\n    userSchoolName: string,\n    schoolCode: string,\n}\n\nclass ManagerMain extends React.Component<Props, State> {\n    public state: State;\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            classModal: false,\n            editClassModal: false,\n            modalType: '',\n            isConfirmed: true,\n            userID: '',\n            userSchoolName: '',\n            schoolCode: '',\n        }\n    }\n\n    componentDidMount = () => {\n        firebase.auth().onAuthStateChanged((user) => {\n            if (user) {\n                firebase.firestore().collection('users').doc(user.uid).onSnapshot((info) => {\n                    // this.setState({ userInfo: info.data() })\n                    const userInfo = info.data();\n                    if (userInfo) {\n                        if (userInfo.isManager) {\n                            if (userInfo.isConfirmed) {\n                                this.setState({ isConfirmed: true });\n                                this.setState({ userID: user.uid });\n                                this.setState({ userSchoolName: userInfo.schoolName });\n\n                                firebase.firestore().collection('classes').onSnapshot((result) => {\n                                    _.each(result.docs, (data) => {\n                                        const name = data.data().name;\n                                        const userSchoolName = this.state.userSchoolName;\n                                        if (name === userSchoolName) {\n                                            this.setState({ schoolCode: data.id });\n                                        }\n                                    })\n                                })\n                            } else {\n                                this.setState({ isConfirmed: false });\n\n                            }\n                        } else {\n                            this.props.history.push('/studentMain');\n                        }\n                    }\n                });\n            } else {\n                this.props.history.push('/');\n            }\n        });\n    }\n\n    private signOut = () => {\n        firebase.auth().signOut().then((user) => {\n            console.log(user);\n            console.log('Logged out');\n            this.props.history.push('/');\n        }).catch((error) => {\n            console.log(error);\n        })\n    }\n\n    private clickBtn = (type: string) => {\n        this.setState({ modalType: type });\n        this.setState({ classModal: true });\n    }\n    render() {\n        const modalData = {\n            modalType: this.state.modalType,\n            modalHide: () => { this.setState({ classModal: false }) },\n            modalOpen: this.state.classModal,\n            schoolName: this.state.userSchoolName,\n            schoolCode: this.state.schoolCode,\n        }\n        if (this.state.isConfirmed) {\n            return (\n\n                <div style={{ margin: 'auto', width: '70%', textAlign: 'center' }}>\n                    <Row>\n                        <Col></Col>\n                        <Col><h1 >Manager Page</h1></Col>\n                        <Col>\n                            <h6 id='signOutBtn' style={{\n                                border: '1px solid', width: 110, height: 40,\n                                lineHeight: '35px', marginTop: 10, cursor: 'pointer', borderRadius: 5\n                            }} onClick={() => this.signOut()}>Sign out</h6>\n                        </Col>\n                    </Row>\n                    <br></br>\n                    <Row style={{ width: '100%', marginBottom: 30 }}>\n                        <Col md='auto' id='addBtn' style={{ width: 300, height: 270, margin: 'auto', marginRight: 0 }}>\n                            <Button style={{ width: '100%', height: '100%', fontWeight: btnFontWeight, fontSize: btnFontSize }}\n                                onClick={() => { this.clickBtn('add') }}\n                            >Add a class</Button>\n                        </Col>\n                        <Col md='auto' id='editBtn' style={{ width: 300, height: 270, margin: 'auto', marginLeft: 0 }}>\n                            <Button style={{ width: '100%', height: '100%', fontWeight: btnFontWeight, fontSize: btnFontSize }}\n                                onClick={() => { this.clickBtn('edit') }}\n                            >Edit a class</Button>\n                        </Col>\n                    </Row>\n                    <Row style={{ width: '100%' }}>\n                        <Col md='auto' id='removeBtn' style={{ width: 300, height: 270, margin: 'auto', marginRight: 0 }}>\n                            <Button style={{ width: '100%', height: '100%', fontWeight: btnFontWeight, fontSize: btnFontSize }}\n                                onClick={() => { this.clickBtn('remove') }}>Remove a class</Button>\n                        </Col>\n                        <Col md='auto' id='studentBtn' style={{ width: 300, height: 270, margin: 'auto', marginLeft: 0 }}>\n                            <Button style={{ width: '100%', height: '100%', fontWeight: btnFontWeight, fontSize: btnFontSize }}>Student screen</Button>\n                        </Col>\n\n                    </Row>\n                    <br></br>\n                    <br></br>\n\n                    <ClassModal\n                        modalInfo={modalData}\n                    />\n\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    Your account is not confirmed yet.\n                    <h6 id='signOutBtn' style={{\n                                border: '1px solid', width: 110, height: 40,\n                                lineHeight: '35px', marginTop: 10, cursor: 'pointer', borderRadius: 5\n                            }} onClick={() => this.signOut()}>Sign out</h6>\n                </div>\n            );\n        }\n\n    }\n}\n\nconst btnFontWeight = 'bold';\nconst btnFontSize = 30;\nexport default ManagerMain;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Form, Col, Row } from 'react-bootstrap';\nimport firebase from '../firebase/firebase';\n\ninterface Props {\n}\ninterface State {\n    studentOrManager: boolean;\n    userEmail: string;\n    password: string;\n    fName: string;\n    lName: string;\n    schoolName: string;\n    studentID: string;\n}\n\nclass Signup extends React.Component<Props, State> {\n    public state: State;\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            studentOrManager: false,\n            userEmail: '',\n            password: '',\n            fName: '',\n            lName: '',\n            schoolName: '',\n            studentID: '',\n        }\n    }\n\n    private signUp = (email: string, password: string) => {\n        console.log(email);\n        console.log(password);\n        const currentTime = new Date();\n        firebase.auth().createUserWithEmailAndPassword(email, password)\n            .then((result) => {\n                if (result.user) {\n                    this.state.studentOrManager ?\n                        firebase.firestore().collection('users').doc(result.user.uid)\n                            .set(\n                                {\n                                    createdAt: currentTime,\n                                    userEmail: result.user.email,\n                                    firstName: this.state.fName,\n                                    lastName: this.state.lName,\n                                    schoolName: this.state.schoolName,\n                                    isManager: this.state.studentOrManager,\n                                    isConfirmed: false,\n                                }\n                            ).then(() => {\n                                firebase.firestore().collection('classes').doc().set(\n                                    { name: this.state.schoolName }\n                                ).then((e)=>{\n                                    console.log(e);\n                                })\n                            })\n                        :\n                        firebase.firestore().collection('users').doc(result.user.uid)\n                            .set(\n                                {\n                                    createdAt: currentTime,\n                                    userEmail: result.user.email,\n                                    firstName: this.state.fName,\n                                    lastName: this.state.lName,\n                                    schoolName: this.state.schoolName,\n                                    isManager: this.state.studentOrManager,\n                                    userID: this.state.studentID,\n                                }\n                            );\n                }\n                console.log(result)\n            }).catch((error) => {\n                console.log(error);\n            })\n    }\n\n    handleEmailChange(e: any) {\n        this.setState({ userEmail: e.target.value });\n    }\n    handlePWChange(e: any) {\n        this.setState({ password: e.target.value });\n    }\n    handleFNameChange(e: any) {\n        this.setState({ fName: e.target.value });\n    }\n    handleLNameChange(e: any) {\n        this.setState({ lName: e.target.value });\n    }\n    handleSchoolChange(e: any) {\n        this.setState({ schoolName: e.target.value });\n\n    }\n\n    handleStudentIDChange(e: any) {\n        this.setState({ studentID: e.target.value });\n    }\n    render() {\n        console.log(this.state.schoolName);\n        return (\n            <div style={{ width: 700, margin: 'auto', textAlign: 'center' }}>\n                <h1>New account</h1>\n                <Form style={{ border: '1px solid', padding: 20, borderRadius: 20, marginTop: 20 }}>\n                    <fieldset>\n                        <Form.Group>\n                            <Row>\n                                <Col>\n                                    <Form.Check\n                                        type=\"radio\"\n                                        label=\"Student\"\n                                        name=\"formHorizontalRadios\"\n                                        id=\"formHorizontalRadios1\"\n                                        onChange={() => { this.setState({ studentOrManager: false }) }}\n                                        defaultChecked\n                                    />\n                                </Col>\n                                <Col>\n                                    <Form.Check\n                                        type=\"radio\"\n                                        label=\"Manager\"\n                                        name=\"formHorizontalRadios\"\n                                        id=\"formHorizontalRadios2\"\n                                        onChange={() => { this.setState({ studentOrManager: true }) }}\n                                    />\n                                </Col>\n                            </Row>\n                        </Form.Group>\n                    </fieldset>\n                    <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n                        <Form.Label column sm={2}>\n                            Email\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control type=\"email\" placeholder=\"Email\"\n                                value={this.state.userEmail} onChange={(e: any) => { this.handleEmailChange(e) }} />\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group as={Row} controlId=\"formHorizontalPassword\">\n                        <Form.Label column sm={2}>\n                            Password\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control type=\"password\" placeholder=\"Password\"\n                                value={this.state.password} onChange={(e: any) => { this.handlePWChange(e) }} />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"formHorizontalFName\">\n                        <Form.Label column sm={2}>\n                            First Name\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control type=\"text\" placeholder=\"First Name\"\n                                value={this.state.fName} onChange={(e: any) => { this.handleFNameChange(e) }} />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"formHorizontalLName\">\n                        <Form.Label column sm={2}>\n                            Last Name\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control type=\"text\" placeholder=\"Last Name\"\n                                value={this.state.lName} onChange={(e: any) => { this.handleLNameChange(e) }} />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"formHorizontalSchool\">\n                        <Form.Label column sm={2}>\n                            School\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control as=\"select\" onChange={(e: any) => { this.handleSchoolChange(e) }}>\n                                <option>School</option>\n                                <option>Douglas College</option>\n                                <option>University of Douglas</option>\n                                <option>Douglas Institute of Technology</option>\n                            </Form.Control>\n                        </Col>\n                    </Form.Group>\n                    {this.state.studentOrManager ? null :\n                        <Form.Group as={Row} controlId=\"formHorizontalStudentID\">\n                            <Form.Label column sm={2}>\n                                Student ID\n                        </Form.Label>\n                            <Col sm={10}>\n                                <Form.Control type=\"text\" placeholder=\"Student ID\"\n                                    value={this.state.studentID} onChange={(e: any) => { this.handleStudentIDChange(e) }} />\n                            </Col>\n                        </Form.Group>\n\n                    }\n                    <Form.Group as={Row}>\n                        <Col>\n                            <div>\n                                <Button variant='success'>\n                                    <Link to='/' style={{ color: 'white', textDecoration: 'none' }}>Sign in page</Link>\n                                </Button>\n                                {this.state.userEmail && this.state.password ?\n                                    <Button onClick={() => { this.signUp(this.state.userEmail, this.state.password) }}\n                                        style={{ marginLeft: 100 }}>\n                                        <Link to='/' style={{ color: 'white', textDecoration: 'none' }}>Sign up</Link></Button>\n                                    :\n                                    <Button type=\"submit\" disabled\n                                        style={{ marginLeft: 100 }}> Sign up</Button>\n                                }\n                            </div>\n                        </Col>\n                    </Form.Group>\n                </Form>\n            </div>\n        );\n    }\n}\nexport default Signup;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport firebase from '../firebase/firebase';\nimport { Button, Row, Col } from 'react-bootstrap';\nimport _ from 'lodash';\n\ninterface Props {\n    history: any,\n}\ninterface State {\n    userID: string,\n    userSchoolName: string,\n    schoolCode: string,\n}\n\nclass StudentMain extends React.Component<Props, State> {\n    public state: State;\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            userID: '',\n            userSchoolName: '',\n            schoolCode: '',\n        }\n    }\n\n    componentDidMount = () => {\n        firebase.auth().onAuthStateChanged((user) => {\n            if (user) {\n                firebase.firestore().collection('users').doc(user.uid).onSnapshot((info) => {\n                    // this.setState({ userInfo: info.data() })\n                    const userInfo = info.data();\n                    if (userInfo) {\n\n                        this.setState({ userID: user.uid });\n                        this.setState({ userSchoolName: userInfo.schoolName });\n\n                        firebase.firestore().collection('classes').onSnapshot((result) => {\n                            _.each(result.docs, (data) => {\n                                const name = data.data().name;\n                                const userSchoolName = this.state.userSchoolName;\n                                if (name === userSchoolName) {\n                                    this.setState({ schoolCode: data.id });\n                                }\n                            })\n                        });\n                    }\n                });\n            } else {\n                this.props.history.push('/');\n            }\n        });\n    }\n\n    private signOut = () => {\n        firebase.auth().signOut().then((user) => {\n            console.log(user);\n            console.log('Logged out');\n            this.props.history.push('/');\n        }).catch((error) => {\n            console.log(error);\n        })\n    }\n\n    private renderData = () => {\n        console.log(this.state.schoolCode);\n        let classData;\n        if (this.state.schoolCode) {\n            firebase.firestore().collection('classes').doc(this.state.schoolCode).collection('Fall 2019').onSnapshot((result) => {\n                console.log(result.docs[0].data());\n                classData = result.docs[0].data().day;\n                // _.each(result.data(), (data) => {\n                //     const name = data;\n                //     console.log(name);\n                // })\n            });\n        }\n        return <div>{classData}</div>;\n\n    }\n    render() {\n        return (\n            <div>\n                <h6 id='signOutBtn' style={{\n                    border: '1px solid', width: 110, height: 40,\n                    lineHeight: '35px', marginTop: 10, cursor: 'pointer', borderRadius: 5\n                }} onClick={() => this.signOut()}>Sign out</h6>\n                <h1>studentMain</h1>\n                {this.renderData()}\n                <div onClick={() => { this.renderData() }}>Get class data</div>\n\n                <Link to='/managerMain'>managerMain</Link>\n                <Link to='/manageclasses'>manageclasses</Link>\n                <Link to='/signup'>signup</Link>\n                <Link to='/studentMain'>studentMain</Link>\n                <Link to='/'>Login</Link>\n            </div>\n        );\n    }\n}\nexport default StudentMain;","import React from 'react';\nimport Login from './screens/Login';\nimport ManageClasses from './screens/ManageClasses';\nimport ManagerMain from './screens/ManagerMain';\nimport Signup from './screens/Signup';\nimport StudentMain from './screens/StudentMain';\nimport { BrowserRouter as Router, Route, } from 'react-router-dom';\n\ninterface Props {\n}\n\nclass AppRouter extends React.Component<Props> {\n\n    render() {\n        return (\n            <Router>\n                <div style={{ height: \"100vh\", overflow: 'auto' }}>\n                    <Route exact path=\"/\" component={Login} />\n                    <Route path=\"/manageclasses\" component={ManageClasses} />\n                    <Route path=\"/managerMain\" component={ManagerMain} />\n                    <Route path=\"/signup\" component={Signup} />\n                    <Route path=\"/studentMain\" component={StudentMain} />\n                    {/* <Route path=\"/manageclasses\" component={ManageClasses} /> */}\n                </div>\n            </Router>\n        )\n    }\n}\n\nexport default AppRouter;\n","import React, { Component } from 'react';\nimport AppRouter from './AppRouter';\n\ninterface Props {\n\n}\n\nclass App extends Component<Props> {\n\n  render() {\n    return (\n      <AppRouter />\n    );\n\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
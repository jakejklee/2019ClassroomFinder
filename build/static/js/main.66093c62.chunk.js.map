{"version":3,"sources":["firebase/firebase.tsx","screens/Login.tsx","screens/ManageClasses.tsx","components/ClassModal.tsx","screens/ManagerMain.tsx","screens/Signup.tsx","screens/StudentMain.tsx","AppRouter.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","componentDidMount","auth","onAuthStateChanged","user","firestore","collection","doc","uid","onSnapshot","info","userInfo","data","isManager","history","push","userSignin","email","password","signInWithEmailAndPassword","then","result","console","log","catch","error","emailAddress","e","setState","target","value","_this2","react_default","a","createElement","id","style","width","textAlign","margin","border","borderRadius","padding","marginLeft","autoComplete","type","name","placeholder","required","onChange","handleEmailChange","handlePWChange","Button","variant","marginRight","onClick","react_router_dom","to","textDecoration","color","React","Component","ManageClasses","ClassModal","modalData","modalInfo","modalType","Modal","show","modalOpen","onHide","modalHide","size","centered","Header","closeButton","Title","Body","Footer","Spinner","animation","ManagerMain","signOut","clickBtn","classModal","editClassModal","Row","Col","height","lineHeight","marginTop","cursor","marginBottom","md","fontWeight","btnFontWeight","fontSize","btnFontSize","components_ClassModal","Signup","signUp","currentTime","Date","createUserWithEmailAndPassword","studentOrManager","set","createdAt","userEmail","firstName","fName","lastName","lName","schoolName","isConfirmed","userID","studentID","Form","Group","Check","label","defaultChecked","as","controlId","Label","column","sm","Control","handleFNameChange","handleLNameChange","handleSchoolChange","handleStudentIDChange","disabled","StudentMain","AppRouter","overflow","react_router","exact","path","component","App","src_AppRouter","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.66093c62.chunk.js","sourcesContent":["import firebase from 'firebase';\n\n// Initialize Firebase\nvar config = {\n    apiKey: \"AIzaSyBMPXUl2PERXrbAUtPujHj04Yllk46xfRg\",\n    authDomain: \"csis-4495.firebaseapp.com\",\n    databaseURL: \"https://csis-4495.firebaseio.com\",\n    projectId: \"csis-4495\",\n    storageBucket: \"csis-4495.appspot.com\",\n    messagingSenderId: \"652993270371\",\n    appId: \"1:652993270371:web:979f7522b83bc351\"\n};\nfirebase.initializeApp(config);\n\nexport default firebase;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport firebase from '../firebase/firebase';\n\ninterface Props {\n    history: any,\n}\ninterface State {\n    emailAddress: string,\n    password: string,\n}\n\nclass Login extends React.Component<Props, State> {\n    public state: State;\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            emailAddress: '',\n            password: '',\n            \n        }\n    }\n\n    componentDidMount = () => {\n        firebase.auth().onAuthStateChanged((user) => {\n            if (user) {\n                firebase.firestore().collection('users').doc(user.uid).onSnapshot((info) => {\n                    // this.setState({ userInfo: info.data() })\n                    const userInfo = info.data();\n                    if (userInfo){\n                        if(userInfo.isManager){\n                            this.props.history.push('/managerMain');\n                        }else{\n                            this.props.history.push('/studentMain');\n                        }\n                    }\n                });\n            }\n\n        });\n    }\n\n    private userSignin = (email: any, password: any) => {\n        firebase.auth().signInWithEmailAndPassword(email, password).then((result) => {\n            console.log(result);\n            if (result.user) {\n                firebase.firestore().collection('users').doc(result.user.uid).onSnapshot((info) => {\n                    const userInfo = info.data();\n                    if (userInfo){\n                        if(userInfo.isManager){\n                            this.props.history.push('/managerMain');\n                        }else{\n                            this.props.history.push('/studentMain');\n                        }\n                    }\n                })\n            }\n        }).catch(function (error: any) {\n            console.log(error);\n        });\n    }\n\n    private handleEmailChange(e: any) {\n        this.setState({ emailAddress: e.target.value });\n    }\n    private handlePWChange(e: any) {\n        this.setState({ password: e.target.value });\n    }\n\n    render() {\n        // this.checkUser();\n        return (\n            <div id=\"mainDiv\" style={{ width: '100%', textAlign: 'center' }}>\n                <br></br><br></br>\n                <h1>Login</h1><br></br><br></br>\n\n                <div id='formDiv' style={{\n                    margin: 'auto',\n                    width: '50%',\n                    border: '1px solid',\n                    borderRadius: 10,\n                    padding: 10.\n                }}>\n                    <form>\n                        <h3 style={{ textAlign: 'left', marginLeft: '5%' }}>Email</h3>\n                        <input style={{ width: '90%' }}\n                            id=\"inputEmail\"\n                            autoComplete=\"off\"\n                            // onFocus={() => { this.renderErrorMsg() }}\n                            type=\"email\"\n                            value={this.state.emailAddress}\n                            name=\"email\"\n                            placeholder=\" example@example.com\"\n                            required\n                            onChange={(e) => { this.handleEmailChange(e) }}\n                        /><br></br><br></br>\n                        <h3 style={{ textAlign: 'left', marginLeft: '5%' }}>Password</h3>\n                        <input style={{ width: '90%' }}\n                            id=\"inputPassword\"\n                            autoComplete=\"off\"\n                            placeholder=\" At least 6 characters\"\n                            type=\"password\"\n                            value={this.state.password}\n                            name=\"password\"\n                            required\n                            onChange={(e) => { this.handlePWChange(e) }}\n                        />\n\n\n                        <br></br><br></br>\n                        {/* <h6>If you do not have an account,</h6>\n                        <h6> click Signup button with email and password you want.</h6> */}\n                        <br></br>\n                        <Button id=\"loginBtn\" variant='primary' style={{ marginRight: 10 }}\n                            onClick={() => this.userSignin(this.state.emailAddress, this.state.password)}>Sign in</Button>\n                        {/* >Sign in</Button> */}\n                        Or\n                        <Button style={{ marginLeft: '10px' }} id=\"signupBtn\" variant='success'\n                        // onClick={() => this.userSignup(this.state.emailAddress, this.state.password)}>Signup</Button>\n                        ><Link to='/signup' style={{ textDecoration: 'none', color: 'white' }}> Sign up</Link></Button>\n                        <br></br><br></br>\n                        {/* <h5 style={{ color: 'red' }}>{this.state.errorMsg}</h5> */}\n                    </form>\n                </div>\n                {/* <div id=\"recaptcha-container\"></div> */}\n\n            </div >\n\n        );\n    }\n}\nexport default Login;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\ninterface Props {\n}\ninterface State {\n}\n\nclass ManageClasses extends React.Component<Props, State> {\n    public state: State;\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>manageclasses</h1>\n                <Link to='/managerMain'>managerMain</Link>\n                <Link to='/manageclasses'>manageclasses</Link>\n                <Link to='/signup'>signup</Link>\n                <Link to='/studentMain'>studentMain</Link>\n                <Link to='/'>Login</Link>\n            </div>\n        );\n    }\n}\nexport default ManageClasses;","import React from 'react';\nimport { Modal, Spinner } from 'react-bootstrap';\ninterface Props {\n    modalInfo: any,\n}\ninterface State {\n}\n\nclass ClassModal extends React.Component<Props, State> {\n    public state: State;\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n        }\n    }\n\n    render() {\n        console.log(this.props);\n        const modalData = this.props.modalInfo;\n        if (modalData.modalType === 'add') {\n            return (\n                <Modal\n                    show={modalData.modalOpen}\n                    onHide={() => modalData.modalHide()}\n                    size=\"sm\"\n                    centered>\n                    <Modal.Header closeButton>\n                        <Modal.Title id=\"contained-modal-title-vcenter\" style={{ textAlign: 'center' }}>\n                            Add a class\n                        </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body style={{ textAlign: 'center' }}>\n                        \n                    </Modal.Body>\n                    <Modal.Footer>\n\n                    </Modal.Footer>\n                </Modal>\n            );\n        } else if (modalData.modalType === 'edit') {\n            return (\n                <div>\n                    <Modal\n                        show={modalData.modalOpen}\n                        onHide={() => modalData.modalHide()}\n                        size=\"sm\"\n                        centered>\n                        <Modal.Header closeButton>\n                            <Modal.Title id=\"contained-modal-title-vcenter\" style={{ textAlign: 'center' }}>\n                                Edit a class\n                                    </Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body style={{ textAlign: 'center' }}>\n\n                        </Modal.Body>\n                        <Modal.Footer>\n\n                        </Modal.Footer>\n                    </Modal>\n                </div>\n            );\n        } else if (modalData.modalType === 'remove') {\n            return (\n                <div>\n                    <Modal\n                        show={modalData.modalOpen}\n                        onHide={() => modalData.modalHide()}\n                        size=\"sm\"\n                        centered>\n                        <Modal.Header closeButton>\n                            <Modal.Title id=\"contained-modal-title-vcenter\" style={{ textAlign: 'center' }}>\n                                Remove a class\n                                    </Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body style={{ textAlign: 'center' }}>\n\n                        </Modal.Body>\n                        <Modal.Footer>\n\n                        </Modal.Footer>\n                    </Modal>\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    <Spinner animation='border'></Spinner>\n                </div>\n            );\n        }\n    }\n}\nexport default ClassModal;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Row, Col } from 'react-bootstrap';\nimport firebase from '../firebase/firebase';\nimport '../css/ManagerMain.css';\nimport ClassModal from '../components/ClassModal';\n\ninterface Props {\n    history: any,\n}\ninterface State {\n    classModal: boolean,\n    editClassModal: boolean,\n    modalType: string,\n}\n\nclass ManagerMain extends React.Component<Props, State> {\n    public state: State;\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            classModal: false,\n            editClassModal: false,\n            modalType: '',\n        }\n    }\n\n    componentDidMount = () => {\n        firebase.auth().onAuthStateChanged((user) => {\n            if (user) {\n                firebase.firestore().collection('users').doc(user.uid).onSnapshot((info) => {\n                    // this.setState({ userInfo: info.data() })\n                    const userInfo = info.data();\n                    if (userInfo){\n                        if(userInfo.isManager){\n                            this.props.history.push('/managerMain');\n                        }else{\n                            this.props.history.push('/studentMain');\n                        }\n                    }\n                });\n            }else{\n                this.props.history.push('/');\n            }\n        });\n    }\n\n    private signOut = () => {\n        firebase.auth().signOut().then((user) => {\n            console.log(user);\n            console.log('Logged out');\n            this.props.history.push('/');\n        }).catch((error) => {\n            console.log(error);\n        })\n    }\n\n    private clickBtn = (type: string) => {\n        this.setState({ modalType: type });\n        this.setState({ classModal: true });\n    }\n    render() {\n        // this.checkUser();\n        const modalData = {\n            modalType: this.state.modalType,\n            modalHide: () => { this.setState({ classModal: false }) },\n            modalOpen: this.state.classModal\n        }\n        return (\n            <div style={{ margin: 'auto', width: '70%', textAlign: 'center' }}>\n                <Row>\n                    <Col></Col>\n                    <Col><h1 >Manager Page</h1></Col>\n                    <Col>\n                        <h6 id='signOutBtn' style={{\n                            border: '1px solid', width: 110, height: 40,\n                            lineHeight: '35px', marginTop: 10, cursor: 'pointer', borderRadius: 5\n                        }} onClick={() => this.signOut()}>Sign out</h6>\n                    </Col>\n                </Row>\n                <br></br>\n                <Row style={{ width: '100%', marginBottom: 30 }}>\n                    <Col md='auto' id='addBtn' style={{ width: 300, height: 270, margin: 'auto', marginRight: 0 }}>\n                        <Button style={{ width: '100%', height: '100%', fontWeight: btnFontWeight, fontSize: btnFontSize }}\n                            onClick={() => { this.clickBtn('add') }}\n                        >Add a class</Button>\n                    </Col>\n                    <Col md='auto' id='editBtn' style={{ width: 300, height: 270, margin: 'auto', marginLeft: 0 }}>\n                        <Button style={{ width: '100%', height: '100%', fontWeight: btnFontWeight, fontSize: btnFontSize }}\n                            onClick={() => { this.clickBtn('edit') }}\n                        >Edit a class</Button>\n                    </Col>\n                </Row>\n                <Row style={{ width: '100%' }}>\n                    <Col md='auto' id='removeBtn' style={{ width: 300, height: 270, margin: 'auto', marginRight: 0 }}>\n                        <Button style={{ width: '100%', height: '100%', fontWeight: btnFontWeight, fontSize: btnFontSize }}\n                            onClick={() => { this.clickBtn('remove') }}>Remove a class</Button>\n                    </Col>\n                    <Col md='auto' id='studentBtn' style={{ width: 300, height: 270, margin: 'auto', marginLeft: 0 }}>\n                        <Button style={{ width: '100%', height: '100%', fontWeight: btnFontWeight, fontSize: btnFontSize }}>Student screen</Button>\n                    </Col>\n                    {/* <Col>\n                        <Button>Remove a class</Button>\n                    </Col>\n                    <Col>\n                        <Button>Student screen</Button>\n                    </Col> */}\n                </Row>\n                <br></br>\n                <br></br>\n\n                <ClassModal\n                    modalInfo={modalData}\n                // modalHide={() => { this.setState({ classModal: false }) }}\n                // modalType={'add'}\n                />\n                {/* <ClassModal\n                    modalInfo={this.state.EditClassModal}\n                    modalHide={() => { this.setState({ EditClassModal: false }) }}\n                    modalType={'edit'}\n                />\n                <ClassModal\n                    modalInfo={this.state.EditClassModal}\n                    modalHide={() => { this.setState({ EditClassModal: false }) }}\n                    modalType={'edit'}\n                /> */}\n            </div>\n        );\n    }\n}\n\nconst btnFontWeight = 'bold';\nconst btnFontSize = 30;\nexport default ManagerMain;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Form, Col, Row } from 'react-bootstrap';\nimport firebase from '../firebase/firebase';\n\ninterface Props {\n}\ninterface State {\n    studentOrManager: boolean;\n    userEmail: string;\n    password: string;\n    fName: string;\n    lName: string;\n    schoolName: string;\n    studentID: string;\n}\n\nclass Signup extends React.Component<Props, State> {\n    public state: State;\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            studentOrManager: false,\n            userEmail: '',\n            password: '',\n            fName: '',\n            lName: '',\n            schoolName: '',\n            studentID: '',\n        }\n    }\n\n    private signUp = (email: string, password: string) => {\n        console.log(email);\n        console.log(password);\n        const currentTime = new Date();\n        firebase.auth().createUserWithEmailAndPassword(email, password)\n            .then((result) => {\n                if (result.user) {\n                    this.state.studentOrManager ?\n                        firebase.firestore().collection('users').doc(result.user.uid)\n                            .set(\n                                {\n                                    createdAt: currentTime,\n                                    userEmail: result.user.email,\n                                    firstName: this.state.fName,\n                                    lastName: this.state.lName,\n                                    schoolName: this.state.schoolName,\n                                    isManager: this.state.studentOrManager,\n                                    isConfirmed:false,\n                                }\n                            )\n                        :\n                        firebase.firestore().collection('users').doc(result.user.uid)\n                            .set(\n                                {\n                                    createdAt: currentTime,\n                                    userEmail: result.user.email,\n                                    firstName: this.state.fName,\n                                    lastName: this.state.lName,\n                                    schoolName: this.state.schoolName,\n                                    isManager: this.state.studentOrManager,\n                                    userID: this.state.studentID,\n                                }\n                            );\n                }\n                console.log(result)\n            }).catch((error) => {\n                console.log(error);\n            })\n    }\n\n    handleEmailChange(e: any) {\n        this.setState({ userEmail: e.target.value });\n    }\n    handlePWChange(e: any) {\n        this.setState({ password: e.target.value });\n    }\n    handleFNameChange(e: any) {\n        this.setState({ fName: e.target.value });\n    }\n    handleLNameChange(e: any) {\n        this.setState({ lName: e.target.value });\n    }\n    handleSchoolChange(e: any) {\n        this.setState({ schoolName: e.target.value });\n\n    }\n\n    handleStudentIDChange(e: any) {\n        this.setState({ studentID: e.target.value });\n    }\n    render() {\n        console.log(this.state.schoolName);\n        return (\n            <div style={{ width: 700, margin: 'auto', textAlign: 'center' }}>\n                <h1>New account</h1>\n                <Form style={{ border: '1px solid', padding: 20, borderRadius: 20, marginTop: 20 }}>\n                    <fieldset>\n                        <Form.Group>\n                            <Row>\n                                <Col>\n                                    <Form.Check\n                                        type=\"radio\"\n                                        label=\"Student\"\n                                        name=\"formHorizontalRadios\"\n                                        id=\"formHorizontalRadios1\"\n                                        onChange={() => { this.setState({ studentOrManager: false }) }}\n                                        defaultChecked\n                                    />\n                                </Col>\n                                <Col>\n                                    <Form.Check\n                                        type=\"radio\"\n                                        label=\"Manager\"\n                                        name=\"formHorizontalRadios\"\n                                        id=\"formHorizontalRadios2\"\n                                        onChange={() => { this.setState({ studentOrManager: true }) }}\n                                    />\n                                </Col>\n                            </Row>\n                        </Form.Group>\n                    </fieldset>\n                    <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n                        <Form.Label column sm={2}>\n                            Email\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control type=\"email\" placeholder=\"Email\"\n                                value={this.state.userEmail} onChange={(e: any) => { this.handleEmailChange(e) }} />\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group as={Row} controlId=\"formHorizontalPassword\">\n                        <Form.Label column sm={2}>\n                            Password\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control type=\"password\" placeholder=\"Password\"\n                                value={this.state.password} onChange={(e: any) => { this.handlePWChange(e) }} />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"formHorizontalFName\">\n                        <Form.Label column sm={2}>\n                            First Name\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control type=\"text\" placeholder=\"First Name\"\n                                value={this.state.fName} onChange={(e: any) => { this.handleFNameChange(e) }} />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"formHorizontalLName\">\n                        <Form.Label column sm={2}>\n                            Last Name\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control type=\"text\" placeholder=\"Last Name\"\n                                value={this.state.lName} onChange={(e: any) => { this.handleLNameChange(e) }} />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"formHorizontalSchool\">\n                        <Form.Label column sm={2}>\n                            School\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control as=\"select\" onChange={(e: any) => { this.handleSchoolChange(e) }}>\n                                <option>School</option>\n                                <option>Dougls College</option>\n                                <option>University of Douglas</option>\n                                <option>Douglas Institute of Technology</option>\n                            </Form.Control>\n                        </Col>\n                    </Form.Group>\n                    {this.state.studentOrManager ? null :\n                        <Form.Group as={Row} controlId=\"formHorizontalStudentID\">\n                            <Form.Label column sm={2}>\n                                Student ID\n                        </Form.Label>\n                            <Col sm={10}>\n                                <Form.Control type=\"text\" placeholder=\"Student ID\"\n                                    value={this.state.studentID} onChange={(e: any) => { this.handleStudentIDChange(e) }} />\n                            </Col>\n                        </Form.Group>\n\n                    }\n                    <Form.Group as={Row}>\n                        <Col>\n                            <div>\n                                <Button variant='success'>\n                                    <Link to='/' style={{color:'white', textDecoration:'none'}}>Sign in page</Link>\n                                    </Button>\n                            {this.state.userEmail && this.state.password ?\n                                <Button onClick={() => { this.signUp(this.state.userEmail, this.state.password)}}\n                                style={{marginLeft:100}}>\n                                    <Link to='/' style={{color:'white', textDecoration:'none'}}>Sign up</Link></Button> \n                                :\n                                <Button type=\"submit\" disabled\n                                style={{marginLeft:100}}> Sign up</Button>\n                            }\n                            </div>\n                        </Col>\n                    </Form.Group>\n                </Form>\n            </div>\n        );\n    }\n}\nexport default Signup;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport firebase from '../firebase/firebase';\n\ninterface Props {\n    history: any,\n}\ninterface State {\n}\n\nclass StudentMain extends React.Component<Props, State> {\n    public state: State;\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n        }\n    }\n\n    private signOut = () => {\n        firebase.auth().signOut().then((user) => {\n            console.log(user);\n            console.log('Logged out');\n            this.props.history.push('/');\n        }).catch((error) => {\n            console.log(error);\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <h6 id='signOutBtn' style={{\n                    border: '1px solid', width: 110, height: 40,\n                    lineHeight: '35px', marginTop: 10, cursor: 'pointer', borderRadius: 5\n                }} onClick={() => this.signOut()}>Sign out</h6>\n                <h1>studentMain</h1>\n                <Link to='/managerMain'>managerMain</Link>\n                <Link to='/manageclasses'>manageclasses</Link>\n                <Link to='/signup'>signup</Link>\n                <Link to='/studentMain'>studentMain</Link>\n                <Link to='/'>Login</Link>\n            </div>\n        );\n    }\n}\nexport default StudentMain;","import React from 'react';\nimport Login from './screens/Login';\nimport ManageClasses from './screens/ManageClasses';\nimport ManagerMain from './screens/ManagerMain';\nimport Signup from './screens/Signup';\nimport StudentMain from './screens/StudentMain';\nimport { BrowserRouter as Router, Route, } from 'react-router-dom';\n\ninterface Props {\n}\n\nclass AppRouter extends React.Component<Props> {\n\n    render() {\n        return (\n            <Router>\n                <div style={{ height: \"100vh\", overflow: 'auto' }}>\n                    <Route exact path=\"/\" component={Login} />\n                    <Route path=\"/manageclasses\" component={ManageClasses} />\n                    <Route path=\"/managerMain\" component={ManagerMain} />\n                    <Route path=\"/signup\" component={Signup} />\n                    <Route path=\"/studentMain\" component={StudentMain} />\n                    {/* <Route path=\"/manageclasses\" component={ManageClasses} /> */}\n                </div>\n            </Router>\n        )\n    }\n}\n\nexport default AppRouter;\n","import React, { Component } from 'react';\nimport AppRouter from './AppRouter';\n\ninterface Props {\n\n}\n\nclass App extends Component<Props> {\n\n  render() {\n    return (\n      <AppRouter />\n    );\n\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}